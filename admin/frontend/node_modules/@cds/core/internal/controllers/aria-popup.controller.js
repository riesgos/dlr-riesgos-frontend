import{listenForAttributeChange as t}from"../utils/events.js";import{TriggerController as e}from"./trigger.controller.js";function r(){return t=>t.addInitializer((t=>new i(t)))}class i{constructor(t){this.host=t,this.host.addController(this),this.trigger=new e(this.host,{focus:!1})}async hostConnected(){await this.host.updateComplete,this.observer=t(this.host,"hidden",(()=>this.updateTrigger(!this.host.hidden)))}async hostUpdate(){await this.host.updateComplete,this.updateTrigger(!this.host.hidden)}hostDisconnected(){this.updateTrigger(!1),this.observer?.disconnect()}updateTrigger(t){this.trigger.current?.hasAttribute("popup")&&(this.trigger.current.ariaExpanded=""+t),this.trigger.prev?.hasAttribute("popup")&&this.trigger.prev!==this.trigger.current&&(this.trigger.prev.ariaExpanded="false")}}export{i as AriaPopupController,r as ariaPopup};
//# sourceMappingURL=aria-popup.controller.js.map
