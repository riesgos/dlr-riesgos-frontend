import { OnInit } from '@angular/core';
import { LayerGroup, Layer } from '@dlr-eoc/services-layers';
import { MapStateService } from '@dlr-eoc/services-map-state';
import { LayersService } from '@dlr-eoc/services-layers';
import { CdkDragDrop } from '@angular/cdk/drag-drop';
import * as i0 from "@angular/core";
export declare class LayerentryGroupComponent implements OnInit {
    get visible(): boolean;
    get cssClass(): string;
    layersSvc: LayersService;
    mapState?: MapStateService;
    group: LayerGroup;
    layerGroups: Array<Layer | LayerGroup>;
    set openAllLayersProperties(value: boolean);
    get openAllLayersProperties(): boolean;
    canZoomToGroup: boolean;
    showInfo: boolean;
    showAction: boolean;
    constructor();
    ngOnInit(): void;
    /**
     * obj: {any| IDynamicComponent}
     */
    checkIsComponentItem(group: LayerGroup, compProp: string): boolean;
    checkBaselayer(group: LayerGroup): boolean;
    checkClassHide(layer: Layer): boolean;
    getLayerName(group: LayerGroup): string;
    setLayerGroupIndex(group: LayerGroup, dir: any): void;
    setGroupLayersVisibility(): void;
    removeLayerGroup(group: LayerGroup): void;
    zoomTo(group: LayerGroup): void;
    layerUpdate(event: any, group: LayerGroup): void;
    showProperties(): void;
    showHideAllDetails(): void;
    isFirst(group: any): boolean;
    isLast(group: any): boolean;
    drop(event: CdkDragDrop<Layer[]>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LayerentryGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LayerentryGroupComponent, "ukis-layerentry-group", never, { "layersSvc": "layersSvc"; "mapState": "mapState"; "group": "group"; "layerGroups": "layerGroups"; }, {}, never, ["*"]>;
}
