{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\lang_m13\\\\Desktop\\\\code\\\\js\\\\ukis_projects\\\\dlr-riesgos-frontend\\\\admin\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { onFirstInteraction as t, onChildListMutation as s } from \"../utils/events.js\";\nimport { getFlattenedDOMTree as e, getFlattenedFocusableItems as i } from \"../utils/traversal.js\";\nimport { contextMenuClick as o } from \"../utils/dom.js\";\nimport { validKeyNavigationCode as h } from \"../utils/keycodes.js\";\nimport { initializeKeyListItems as l, simpleFocusable as r, getActiveElement as n, setActiveKeyListItem as c, focusElement as d } from \"../utils/focus.js\";\nimport { getNextKeyGridItem as a } from \"./key-navigation.utils.js\";\n\nfunction u() {\n  return t => t.addInitializer(t => new f(t));\n}\n\nclass f {\n  constructor(t) {\n    this.host = t, this.observers = [], this.host.addController(this);\n  }\n\n  get hostGrid() {\n    return this.host.keyNavGrid ? this.host.keyNavGrid : this.host;\n  }\n\n  get hostRows() {\n    const t = Array.from(this.host.rows);\n    return this.host.columnRow && t.unshift(this.host.columnRow), t;\n  }\n\n  get hostCells() {\n    const t = Array.from(this.host.cells);\n    return this.host.columns && t.unshift(...Array.from(this.host.columns)), t;\n  }\n\n  get activeCell() {\n    return Array.from(this.hostCells).find(t => 0 === t.tabIndex);\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.host.updateComplete, t(_this.host).then(() => {\n        l(_this.hostCells), _this.hostGrid.addEventListener(\"mouseup\", t => _this.clickCell(t)), _this.hostGrid.addEventListener(\"keydown\", t => _this.keynavCell(t)), _this.hostGrid.addEventListener(\"keyup\", t => _this.updateCellActivation(t));\n      }), _this.observers.push(s(_this.host, () => l(_this.hostCells)));\n    })();\n  }\n\n  hostDisconnected() {\n    this.observers.forEach(t => t?.disconnect());\n  }\n\n  clickCell(t) {\n    if (!o(t)) {\n      const s = t.composedPath().find(t => this.hostCells.find(s => s === t));\n      s && this.setActiveCell(t, s);\n    }\n  }\n\n  keynavCell(t) {\n    if (h(t) && r(n())) {\n      const {\n        x: s,\n        y: i\n      } = a(this.hostCells, this.hostRows, {\n        code: t.code,\n        ctrlKey: t.ctrlKey,\n        dir: this.host.dir\n      }),\n            o = Array.from(e(this.hostRows[i])).filter(t => !!this.hostCells.find(s => s === t))[s];\n      this.setActiveCell(t, o), t.preventDefault();\n    }\n  }\n\n  setActiveCell(t, s) {\n    c(this.hostCells, s);\n    const e = i(s),\n          o = e.filter(t => r(t));\n    1 === o.length && 1 === e.length ? d(o[0]) : d(s), s.dispatchEvent(new CustomEvent(\"cdsKeyChange\", {\n      bubbles: !0,\n      detail: {\n        code: t.code,\n        shiftKey: t.shiftKey,\n        activeItem: s\n      }\n    }));\n  }\n\n  updateCellActivation(t) {\n    \"Escape\" === t.code && this.activeCell?.focus(), \"Enter\" === t.code && this.activeCell === t.composedPath()[0] && i(this.activeCell)[0]?.focus();\n  }\n\n}\n\nexport { f as KeyNavigationGridController, u as keyNavigationGrid };","map":{"version":3,"sources":["C:/Users/lang_m13/Desktop/code/js/ukis_projects/dlr-riesgos-frontend/admin/frontend/node_modules/@cds/core/internal/controllers/key-navigation-grid.controller.js"],"names":["onFirstInteraction","t","onChildListMutation","s","getFlattenedDOMTree","e","getFlattenedFocusableItems","i","contextMenuClick","o","validKeyNavigationCode","h","initializeKeyListItems","l","simpleFocusable","r","getActiveElement","n","setActiveKeyListItem","c","focusElement","d","getNextKeyGridItem","a","u","addInitializer","f","constructor","host","observers","addController","hostGrid","keyNavGrid","hostRows","Array","from","rows","columnRow","unshift","hostCells","cells","columns","activeCell","find","tabIndex","hostConnected","updateComplete","then","addEventListener","clickCell","keynavCell","updateCellActivation","push","hostDisconnected","forEach","disconnect","composedPath","setActiveCell","x","y","code","ctrlKey","dir","filter","preventDefault","length","dispatchEvent","CustomEvent","bubbles","detail","shiftKey","activeItem","focus","KeyNavigationGridController","keyNavigationGrid"],"mappings":"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","sourcesContent":["import{onFirstInteraction as t,onChildListMutation as s}from\"../utils/events.js\";import{getFlattenedDOMTree as e,getFlattenedFocusableItems as i}from\"../utils/traversal.js\";import{contextMenuClick as o}from\"../utils/dom.js\";import{validKeyNavigationCode as h}from\"../utils/keycodes.js\";import{initializeKeyListItems as l,simpleFocusable as r,getActiveElement as n,setActiveKeyListItem as c,focusElement as d}from\"../utils/focus.js\";import{getNextKeyGridItem as a}from\"./key-navigation.utils.js\";function u(){return t=>t.addInitializer((t=>new f(t)))}class f{constructor(t){this.host=t,this.observers=[],this.host.addController(this)}get hostGrid(){return this.host.keyNavGrid?this.host.keyNavGrid:this.host}get hostRows(){const t=Array.from(this.host.rows);return this.host.columnRow&&t.unshift(this.host.columnRow),t}get hostCells(){const t=Array.from(this.host.cells);return this.host.columns&&t.unshift(...Array.from(this.host.columns)),t}get activeCell(){return Array.from(this.hostCells).find((t=>0===t.tabIndex))}async hostConnected(){await this.host.updateComplete,t(this.host).then((()=>{l(this.hostCells),this.hostGrid.addEventListener(\"mouseup\",(t=>this.clickCell(t))),this.hostGrid.addEventListener(\"keydown\",(t=>this.keynavCell(t))),this.hostGrid.addEventListener(\"keyup\",(t=>this.updateCellActivation(t)))})),this.observers.push(s(this.host,(()=>l(this.hostCells))))}hostDisconnected(){this.observers.forEach((t=>t?.disconnect()))}clickCell(t){if(!o(t)){const s=t.composedPath().find((t=>this.hostCells.find((s=>s===t))));s&&this.setActiveCell(t,s)}}keynavCell(t){if(h(t)&&r(n())){const{x:s,y:i}=a(this.hostCells,this.hostRows,{code:t.code,ctrlKey:t.ctrlKey,dir:this.host.dir}),o=Array.from(e(this.hostRows[i])).filter((t=>!!this.hostCells.find((s=>s===t))))[s];this.setActiveCell(t,o),t.preventDefault()}}setActiveCell(t,s){c(this.hostCells,s);const e=i(s),o=e.filter((t=>r(t)));1===o.length&&1===e.length?d(o[0]):d(s),s.dispatchEvent(new CustomEvent(\"cdsKeyChange\",{bubbles:!0,detail:{code:t.code,shiftKey:t.shiftKey,activeItem:s}}))}updateCellActivation(t){\"Escape\"===t.code&&this.activeCell?.focus(),\"Enter\"===t.code&&this.activeCell===t.composedPath()[0]&&i(this.activeCell)[0]?.focus()}}export{f as KeyNavigationGridController,u as keyNavigationGrid};\n"]},"metadata":{},"sourceType":"module"}