import { BehaviorSubject } from 'rxjs';
import { MapState, IMapState } from './types/map-state';
import { TGeoExtent } from '@dlr-eoc/services-layers';
import * as i0 from "@angular/core";
export declare class MapStateService {
    private mapState;
    private lastAction;
    constructor();
    getMapState(): BehaviorSubject<MapState>;
    setMapState(state: MapState | IMapState): void;
    getExtent(): import("rxjs").Observable<import("./types/map-state").TGeoExtent>;
    setExtent(extent: TGeoExtent, notifier?: IMapState['options']['notifier']): void;
    getLastAction(): BehaviorSubject<"setExtent" | "setState">;
    static ɵfac: i0.ɵɵFactoryDeclaration<MapStateService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<MapStateService>;
}
