import { WpsProcess, ProcessStateAvailable, Product } from '../../riesgos.datatypes';
import { WizardableProcess, WizardProperties } from '../../../components/config_wizard/wizardable_processes';
import { HttpClient } from '@angular/common/http';
import { VectorLayerProduct } from '../../riesgos.datatypes.mappable';
import { WpsData } from '@dlr-eoc/utils-ogc';
import { Feature } from '@turf/helpers';
import { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';


export const bufferServiceGeometry: VectorLayerProduct & WpsData = {
    uid: '52NGeometry',
    description: {
        id: 'input',
        name: 'input',
        format: 'application/vnd.geo+json',
        type: 'complex',
        icon: 'dot-circle',
        reference: false,
        vectorLayerAttributes: {
            style: (f: Feature, r: number, selected: boolean) => {
              return new Style({
                stroke: new Stroke({
                  color: '#666666',
                  width: 1,
                }),
              });
            }
          }
    },
    value: [{
        "type": "FeatureCollection",
        "features": [
          {
            "type": "Feature",
            "properties": {},
            "geometry": {
              "type": "LineString",
              "coordinates": [
                [
                  -68.90625,
                  -17.644022027872712
                ],
                [
                  -75.9375,
                  -23.88583769986199
                ],
                [
                  -63.6328125,
                  -22.593726063929296
                ],
                [
                  -76.2890625,
                  -30.751277776257812
                ],
                [
                  -68.5546875,
                  -30.751277776257812
                ]
              ]
            }
          }
        ]
      }]
};


export const bufferServiceRadius: Product & WpsData = {
    uid: '52Radius',
    description: {
        id: 'bufferRadiusMeters',
        reference: false,
        type: 'literal',
    },
    value: '50000'
};


export const bufferServiceOutput: VectorLayerProduct & WpsData = {
    uid: '52NOutput',
    description: {
        id: 'bufferedOutput',
        name: 'bufferedOutput',
        format: 'application/vnd.geo+json',
        type: 'complex',
        icon: 'dot-circle',
        reference: false,
        vectorLayerAttributes: {
            style: (f: Feature, r: number, selected: boolean) => {
              return new Style({
                stroke: new Stroke({
                  color: '#666666',
                  width: 1,
                }),
              });
            }
          }
    },
    value: null,
};


export class BufferService extends WpsProcess implements WizardableProcess {
    wizardProperties: WizardProperties = {
        providerName: '52North',
        providerUrl: 'https://52north.org/',
        shape: 'dot-circle',
    };

    constructor(http: HttpClient) {
        super(
            '52NBufferService',
            'Buffer Service',
            ['52NGeometry', '52Radius'],
            ['52NOutput'],
            'org.n52.gsv2020.jupyter-buffer',
            'Calculation of a Geometry Buffer using Jupyter Notebook execution',
            'https://testbed.dev.52north.org/ades/service',
            '1.0.0',
            http,
            new ProcessStateAvailable(),
        );
    }
}