# handling http to ws connection upgrade
# and ws connection close
map $http_upgrade $connection_upgrade {
    default Upgrade;
    ''      close;
}


server {
    listen 80 default_server;
    server_name _;
    resolver 127.0.0.11;  # docker-network's DNS server

    

    # serve frontend from frontend-container
    location / {
        proxy_pass http://frontend:80/;
    }

    # redirect all requests going to proxy to the target-url
    location /proxy {
        proxy_pass $query_string;
    }

    # redirect all requests to middleware to the middlware-container
    location /middleware {
        proxy_pass http://middleware:8888;
    }
    # redirect all requests to ws:middleware to the middleware-container
    # initial ws-handshake over http
    location /middleware/execute {
        proxy_pass http://middleware:8888/execute;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Some headers must be re-applied on every hop: https://datatracker.ietf.org/doc/html/rfc2616#section-13.5.1
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # prove that you're alive
    location /test/ {
        root /usr/share/nginx/html/;
    }
}
