export interface IMapCenter {
    lat: number;
    lon: number;
}
export interface IMapStateOptions {
    maxzoom?: number;
    minzoom?: number;
    notifier?: 'user' | 'map';
}
export interface IMapState {
    zoom: number;
    center: IMapCenter;
    options?: IMapStateOptions;
    extent?: TGeoExtent;
    /** iso 8601 Datestring */
    time?: string;
}
/**
 * like ol.extent: minX, minY, maxX, maxY
 */
export declare type TGeoExtent = [number, number, number, number] | [number, number, number, number, number, number];
export declare class MapState implements IMapState {
    zoom: number;
    center: {
        lat: number;
        lon: number;
    };
    options: IMapStateOptions;
    extent: TGeoExtent;
    /** iso 8601 Datestring */
    time: string;
    constructor(zoom: number, center: IMapCenter, options?: IMapStateOptions, extent?: TGeoExtent, time?: string);
    sameCenter(center: IMapState['center']): boolean;
    sameZoom(zoom: IMapState['zoom']): boolean;
    sameExtent(extent: TGeoExtent): boolean;
    sameNotifier(notifier: IMapState['options']['notifier']): boolean;
}
