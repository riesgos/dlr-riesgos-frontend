import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { DomAdapter } from '../../dom-adapter/dom-adapter';
import { ClrDragEvent } from '../drag-event';
import { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';
import { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';
import * as i0 from "@angular/core";
export declare class ClrDroppable<T> implements OnInit, OnDestroy {
    private el;
    private eventBus;
    private domAdapter;
    private renderer;
    private dragStartSubscription;
    private dragMoveSubscription;
    private dragEndSubscription;
    private droppableEl;
    private clientRect;
    constructor(el: ElementRef, eventBus: DragAndDropEventBusService<T>, domAdapter: DomAdapter, renderer: Renderer2);
    isDraggableMatch: boolean;
    private _isDraggableOver;
    set isDraggableOver(value: boolean);
    private _group;
    set group(value: string | string[]);
    private _dropTolerance;
    private dropToleranceGenerator;
    set dropTolerance(value: number | string | ClrDropToleranceInterface);
    dragStartEmitter: EventEmitter<ClrDragEvent<T>>;
    dragMoveEmitter: EventEmitter<ClrDragEvent<T>>;
    dragEndEmitter: EventEmitter<ClrDragEvent<T>>;
    dragLeaveEmitter: EventEmitter<ClrDragEvent<T>>;
    dragEnterEmitter: EventEmitter<ClrDragEvent<T>>;
    dropEmitter: EventEmitter<ClrDragEvent<T>>;
    private unsubscribeFrom;
    private checkGroupMatch;
    private isInDropArea;
    private onDragStart;
    private onDragMove;
    private onDragEnd;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ClrDroppable<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ClrDroppable<any>, "[clrDroppable]", never, { "group": "clrGroup"; "dropTolerance": "clrDropTolerance"; }, { "dragStartEmitter": "clrDragStart"; "dragMoveEmitter": "clrDragMove"; "dragEndEmitter": "clrDragEnd"; "dragLeaveEmitter": "clrDragLeave"; "dragEnterEmitter": "clrDragEnter"; "dropEmitter": "clrDrop"; }, never>;
}
