{"version":3,"file":"dlr-eoc-layer-control.mjs","sources":["../../../projects/layer-control/src/lib/layerentry/layerentry.component.ts","../../../projects/layer-control/src/lib/layerentry/layerentry.component.html","../../../projects/layer-control/src/lib/utils/array-reverse.pipe.ts","../../../projects/layer-control/src/lib/utils/obj-type.pipe.ts","../../../projects/layer-control/src/lib/layerentry-group/layerentry-group.component.ts","../../../projects/layer-control/src/lib/layerentry-group/layerentry-group.component.html","../../../projects/layer-control/src/lib/layer-control/layer-control.component.ts","../../../projects/layer-control/src/lib/layer-control/layer-control.component.html","../../../projects/layer-control/src/lib/base-layer-control/base-layer-control.component.ts","../../../projects/layer-control/src/lib/base-layer-control/base-layer-control.component.html","../../../projects/layer-control/src/lib/layer-control.module.ts","../../../projects/layer-control/src/public-api.ts","../../../projects/layer-control/src/dlr-eoc-layer-control.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, HostBinding } from '@angular/core';\nimport { IDynamicComponent } from '@dlr-eoc/core-ui';\n\n// imports only for typings...\nimport {\n  LayerGroup, Layer, RasterLayer, LayersService, WmsLayer, WmtsLayer\n} from '@dlr-eoc/services-layers';\nimport { MapStateService } from '@dlr-eoc/services-map-state';\n\n@Component({\n  selector: 'ukis-layerentry',\n  templateUrl: './layerentry.component.html',\n  styleUrls: ['./layerentry.component.scss']\n})\nexport class LayerentryComponent implements OnInit {\n  @HostBinding('class.layer-visible') get visible() { return this.layer.visible; }\n  @HostBinding('class') get cssClass() { return this.layer.cssClass; }\n\n  @Input('layersSvc') layersSvc: LayersService;\n  @Input('mapState') mapState?: MapStateService;\n  @Input('layer') layer: Layer;\n\n  @Input('group') group?: LayerGroup;\n  @Input('layerGroups') layerGroups?: Array<Layer | LayerGroup>;;\n  @Input('expanded') set expanded(value: boolean) {\n    if (this.layer) {\n      this.layer.expanded = value;\n    }\n  }\n  get expanded() {\n    if (this.layer) {\n      return this.layer.expanded;\n    } else {\n      return false;\n    }\n  }\n  @Input('expandable') expandable = true;\n\n\n  @Output() update = new EventEmitter<{ layer: Layer }>();\n\n  public canZoomToLayer = false;\n\n  public activeTabs = {\n    settings: false,\n    legend: true,\n    description: false,\n    changeStyle: false\n  };\n\n\n  constructor() {\n\n  }\n\n  /**\n   * obj: {any| IDynamicComponent}\n   */\n  checkIsComponentItem(layer: Layer, compProp: string): layer is Omit<Layer, 'legendImg' | 'action'> & { legendImg: IDynamicComponent, action: IDynamicComponent } {\n    // https://stackoverflow.com/a/65347533/10850021\n    const obj = layer[compProp];\n    let isComp = false;\n    if (obj && typeof obj === 'object') {\n      if ('component' in obj) {\n        if (!obj.inputs) {\n          // https://2ality.com/2014/01/object-assign.html#2.3\n          const layerClone = Object.assign({ __proto__: this.layer['__proto__'] }, layer);\n          console.log(layerClone)\n          if (layerClone && layerClone[compProp]) {\n            delete layerClone[compProp];\n          }\n          obj.inputs = { layer: layerClone };\n        } else if (obj.inputs && !obj.inputs.layer) {\n          // https://2ality.com/2014/01/object-assign.html#2.3\n          const layerClone = Object.assign({ __proto__: this.layer['__proto__'] }, layer);\n          console.log(layerClone)\n          if (layerClone && layerClone[compProp]) {\n            delete layerClone[compProp];\n          }\n          obj.inputs = Object.assign({ layer: layerClone }, obj.inputs);\n        }\n        isComp = true;\n      }\n    }\n    return isComp;\n  }\n\n  getLayerName(layer: Layer) {\n    if (layer.displayName) {\n      return layer.displayName;\n    } else {\n      return layer.name;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.layersSvc) {\n      console.error('you need to provide a layersService!');\n    }\n    // console.log(this.layer)\n    if (!this.layer.legendImg) {\n      this.activeTabs.description = true;\n      this.activeTabs.legend = false;\n      this.activeTabs.settings = false;\n      this.activeTabs.changeStyle = false;\n    }\n\n    if (!this.layer.legendImg && !this.layer.description) {\n      this.activeTabs.description = false;\n      this.activeTabs.legend = false;\n      this.activeTabs.settings = true;\n    }\n\n    if (this.layer.bbox && this.layer.bbox.length >= 4) {\n      this.canZoomToLayer = true;\n    }\n  }\n\n  /**\n   * show or hide the layer\n   */\n  setLayerVisibility(selectedLayer: Layer, group?: LayerGroup) {\n    if (!group) {\n      if (selectedLayer.filtertype === 'Baselayers') {\n        selectedLayer.visible = !selectedLayer.visible;\n        const filterdlayers = this.layerGroups.filter((l) => l.filtertype === 'Baselayers');\n        // console.log(filterdlayers);\n        for (const layer of filterdlayers) {\n          if (layer instanceof Layer && layer.id !== selectedLayer.id) {\n            layer.visible = !selectedLayer.visible;\n            this.layersSvc.updateLayer(layer, layer.filtertype || 'Baselayers');\n          }\n        }\n      } else {\n        selectedLayer.visible = !selectedLayer.visible;\n        this.layersSvc.updateLayer(selectedLayer, selectedLayer.filtertype || 'Layers'); // TODO check for baselayers!!!!!!\n      }\n    } else {\n      if (group.layers.length > 0) {\n        /** \"radio\" for Baselayers */\n        if (group.filtertype === 'Baselayers') {\n          for (const layer of group.layers) {\n            layer.visible = layer === selectedLayer;\n          }\n          this.update.emit({\n            layer: this.layer\n          });\n          /** \"checkbox\" for all other layers */\n        } else {\n          const tempGroupVisible = group.visible;\n          /** change visibility of the selected layer */\n          selectedLayer.visible = !selectedLayer.visible;\n\n          /** check if group visibility has changed */\n          if (tempGroupVisible !== group.visible) {\n            this.update.emit({\n              layer: this.layer\n            });\n          } else {\n            /** If the visibility of the group don't changes update only the layer  */\n            this.layersSvc.updateLayer(selectedLayer, selectedLayer.filtertype || 'Layers');\n          }\n        }\n      }\n    }\n  }\n  /**\n   * setLayerIndex\n   */\n  setLayerIndex(layer: Layer, dir, group?: LayerGroup) {\n    // console.log('is First', this.isFirst(layer));\n    // console.log('is Last', this.isLast(layer));\n    // console.log(layer, group);\n    if (group) {\n      this.layersSvc.setLayerIndexInGroup(layer, dir, group);\n    } else {\n      this.layersSvc.setGroupLayerIndex(layer, dir);\n    }\n  }\n\n  /**\n   * remove the Layer if possible\n   */\n  removeLayer(group: LayerGroup, selectedLayer: Layer) {\n    // console.log(\"delete \", group, selectedLayer)\n    if (group) {\n      // console.log(\"delete layer from group\")\n      this.layersSvc.removeLayerFromGroup(selectedLayer, group);\n    } else {\n      // console.log('delete single layer');\n      this.layersSvc.removeLayer(selectedLayer, selectedLayer.filtertype);\n    }\n  }\n\n  zoomTo(layer: Layer) {\n    if (this.mapState && layer.bbox && layer.bbox.length >= 4) {\n      this.mapState.setExtent(layer.bbox as [number, number, number, number]);\n    }\n  }\n\n  setLayerOpacity(layer) {\n    if (!this.group) {\n      this.layersSvc.updateLayer(layer, layer.filtertype || 'Layers'); // TODO check for baselayers!!!!!!\n    } else {\n      this.update.emit({\n        layer\n      });\n    }\n  }\n\n  checkBaselayer(layer: Layer, group?: LayerGroup) {\n    if (layer.filtertype === 'Baselayers' || group && group.filtertype === 'Baselayers') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * is expandable if layer has legend, description or opacity can be changed\n   */\n  is_expandable() {\n    if (this.group) {\n      return !this.layer.legendImg && this.group.filtertype === 'Baselayers';\n    } else {\n      return false; // !this.layer.legendImg; //this.layer.description\n    }\n  }\n\n  showProperties() {\n    if (!this.is_expandable()) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  switchTab(tabName: string) {\n    for (const key of Object.keys(this.activeTabs)) {\n      this.activeTabs[key] = tabName === key;\n    }\n  }\n\n  isSelectedStyle(styleName: string): boolean {\n    if (this.layer instanceof WmsLayer) {\n      return this.layer.params.STYLES === styleName;\n    } else if (this.layer instanceof WmtsLayer) {\n      return this.layer.params.style === styleName;\n    } else {\n      // TODO: how to compare styles for vector layers and custom layers?\n      return false;\n    }\n  }\n\n  executeChangeStyle(evt: Event) {\n    const newStyleName = (evt.target as HTMLInputElement).value;\n    if (this.layer.styles) {\n      const newStyle = (this.layer as RasterLayer).styles.find(s => s.name === newStyleName);\n      if (newStyle) {\n        this.layer.legendImg = newStyle.legendURL;\n        if (this.layer instanceof WmsLayer) {\n          this.layer.params.STYLES = newStyle.name;\n        } else if (this.layer instanceof WmtsLayer) {\n          this.layer.params.style = newStyle.name;\n        }\n        this.layersSvc.updateLayer(this.layer, this.layer.filtertype);\n      }\n    }\n  }\n\n  isFirst(layer) {\n    if (this.group) {\n      return this.layersSvc.isGroupFirst(layer, this.group.layers);\n    } else {\n      return this.layersSvc.isGroupFirst(layer, null, layer.filtertype);\n    }\n  }\n\n  isLast(layer) {\n    if (this.group) {\n      return this.layersSvc.isGroupLast(layer, this.group.layers);\n    } else {\n      return this.layersSvc.isGroupLast(layer, null, layer.filtertype);\n    }\n  }\n\n  getExpandShape() {\n    // return this.openProperties ? 'down' : 'right';\n    return this.expanded ? { transform: 'rotate(180deg)' } : { transform: 'rotate(90deg)' };\n  }\n\n}\n","<div class=\"layer\">\n  <div class=\"head\">\n    <!-- layer expand icon -->\n    <clr-icon shape=\"angle\" [ngStyle]=\"getExpandShape()\" class=\"iconButton\" [ngClass]=\"{'disabled': is_expandable()}\"\n      (click)=\"showProperties()\" title=\"Details\"></clr-icon>\n\n    <!-- layer title -->\n    <div #ref class=\"item-title-replacement title\" (click)=\"showProperties()\" [title]=\"getLayerName(layer)\">\n      <ng-content></ng-content>\n    </div>\n    <span *ngIf=\"ref.children.length == 0\" class=\"title\" [title]=\"getLayerName(layer)\" (click)=\"showProperties()\">\n      {{getLayerName(layer)}}\n    </span>\n\n    <!-- setLayerIndex // for reversed layergroups on ngFor up is down -->\n    <span *ngIf=\"!checkBaselayer(layer,group)\">\n      <clr-icon [hidden]=\"layerGroups && layerGroups.length == 1\" class=\"iconButton\" shape=\"arrow\"\n        [ngClass]=\"{'disabled': isLast(layer)}\" (click)=\"setLayerIndex(layer, 'down', group)\" title=\"up\"></clr-icon>\n      <clr-icon [hidden]=\"layerGroups && layerGroups.length == 1\" class=\"iconButton\" shape=\"arrow\"\n        [ngClass]=\"{'disabled': isFirst(layer)}\" (click)=\"setLayerIndex(layer, 'up', group)\" title=\"down\" dir=\"down\">\n      </clr-icon>\n    </span>\n\n    <!-- setLayerVisibility -->\n    <input class=\"hide\" [type]=\"(checkBaselayer(layer,group))?'radio':'checkbox'\" [name]=\"'layer'\" [id]=\"layer.id\"\n      [checked]=\"layer.visible\" (change)=\"setLayerVisibility(layer, group)\">\n    <label [for]=\"layer.id\">\n      <clr-icon *ngIf=\"checkBaselayer(layer,group); else notBaselayer\" class=\"iconButton\"\n        [ngClass]=\"{'is-solid':layer.visible}\" [attr.shape]=\"(layer.visible)?'dot-circle':'circle'\"\n        title=\"{{layer.visible?'Choose another layer':'Show layer'}}\">\n      </clr-icon>\n      <ng-template #notBaselayer>\n        <clr-icon class=\"iconButton\" [ngClass]=\"{'is-solid':layer.visible}\"\n          [attr.shape]=\"(layer.visible)?'eye':'eye-hide'\" title=\"{{layer.visible?'Hide layer':'Show layer'}}\">\n        </clr-icon>\n      </ng-template>\n    </label>\n\n  </div>\n  <div *ngIf=\"expandable && expanded\" class=\"body\">\n    <!-- tools: zoomTo, remove, switch Tab -->\n    <div class=\"tools\">\n      <clr-icon *ngIf=\"!checkBaselayer(layer, group)\" title=\"Layer settings\" shape=\"cog\" class=\"iconButton\"\n        [ngClass]=\"{'active': activeTabs['settings']}\" (click)=\"switchTab('settings')\"></clr-icon>\n      <clr-icon *ngIf=\"layer.legendImg\" title=\"Layer Legend\" shape=\"image\" class=\"iconButton\"\n        [ngClass]=\"{'active': activeTabs['legend']}\" (click)=\"switchTab('legend')\"></clr-icon>\n      <clr-icon *ngIf=\"layer.description\" title=\"Layer info\" shape=\"info-standard\" class=\"iconButton\"\n        [ngClass]=\"{'active': activeTabs['description']}\" (click)=\"switchTab('description')\"></clr-icon>\n      <clr-icon *ngIf=\"layer.styles?.length > 1\" title=\"Change style\" shape=\"cloud-chart\" class=\"iconButton\"\n        [ngClass]=\"{'active': activeTabs['changeStyle']}\" (click)=\"switchTab('changeStyle')\"></clr-icon>\n\n      <clr-icon *ngFor=\"let item of layer.actions\" [attr.shape]=\"item.icon\" class=\"iconButton\"\n        (click)=\"item.action(layer)\" [title]=\"item.title\">\n      </clr-icon>\n\n\n      <span></span>\n      <clr-icon *ngIf=\"canZoomToLayer\" shape=\"zoom-in\" class=\"iconButton\" title=\"Zoom to layer\" (click)=\"zoomTo(layer)\">\n      </clr-icon>\n      <clr-icon *ngIf=\"layer.removable\" shape=\"trash\" class=\"iconButton\" (click)=\"removeLayer(group, layer)\"\n        title=\"Remove layer\"></clr-icon>\n    </div>\n    <div class=\"tabsbody\">\n      <div *ngIf=\"activeTabs.settings\" class=\"layersettings\">\n        <!-- setLayerOpacity -->\n        <div class=\"form-group\">\n          <label [for]=\"'layer_transparency_slider_'+layer.id\">Opacity:</label>\n          <input [id]=\"'layer_transparency_slider_'+layer.id\" type=\"range\" class=\"ukis-range-input opacity-input\"\n            name=\"points\" [value]=\"layer.opacity\" [min]=\"0.0\" [max]=\"1.0\" [step]=\"0.1\" (change)=\"setLayerOpacity(layer)\"\n            [(ngModel)]=\"layer.opacity\" />\n          <span>{{\" \"+layer.opacity}}</span>\n        </div>\n        <ng-container *ngIf=\"checkIsComponentItem(layer, 'action');\">\n          <ukis-dynamic-component [(dynamicComponent)]=\"layer.action\">\n          </ukis-dynamic-component>\n        </ng-container>\n      </div>\n      <!-- show Legend -->\n      <div *ngIf=\"activeTabs.legend && layer.legendImg\">\n        <ng-container *ngIf=\"checkIsComponentItem(layer,'legendImg'); else imageUrl\">\n          <ukis-dynamic-component [(dynamicComponent)]=\"layer.legendImg\"></ukis-dynamic-component>\n        </ng-container>\n\n        <ng-template #imageUrl>\n          <a [href]=\"layer.legendImg\" target=\"_blank\" title=\"Show full Image\"><img [src]=\"layer.legendImg\" /></a>\n        </ng-template>\n      </div>\n      <!-- show Description -->\n      <div *ngIf=\"activeTabs.description && layer.description\">\n        <span [innerHTML]=\"layer.description\"></span>\n      </div>\n      <!-- show style-switcher -->\n      <div *ngIf=\"activeTabs.changeStyle && layer.styles && layer.styles?.length > 1\">\n        <select clrSelect (change)=\"executeChangeStyle($event)\">\n          <option *ngFor=\"let style of layer.styles\" [value]=\"style.name\"\n            [attr.selected]=\"isSelectedStyle(style.name) ? true : null\">{{style.title}}</option>\n        </select>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'reverse',\n  pure: false\n})\nexport class ReversePipe implements PipeTransform {\n  transform(input: any): any {\n    if (typeof input === 'string') {\n      return input\n        .split('')\n        .reverse()\n        .join('');\n    }\n    return Array.isArray(input) ? input.slice().reverse() : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'type', pure: false\n})\nexport class ObjTypePipe implements PipeTransform {\n  transform(observations: any[], type: string): any[] {\n    /* TODO: check layerlist for purity console.log(\"reevaluated\"); */\n    return observations.filter((o) => o.type === type);\n  }\n}\n\n/**\n * e.g. usage *ngFor=\"let item of items | itemsfilter: callbackfn\"\n */\n@Pipe({\n  name: 'itemsfilter', pure: false\n})\nexport class ItemsFilterPipe implements PipeTransform {\n  transform(items: any[], callbackfn?: (value: any, index: number, array: any[]) => boolean): any[] {\n    /* TODO: check layerlist for purity console.log(\"reevaluated\"); */\n    return items.filter(callbackfn);\n  }\n}\n\n","import { Component, OnInit, Input, HostBinding } from '@angular/core';\n\n\n// imports only for typings...\nimport { LayerGroup, Layer } from '@dlr-eoc/services-layers';\nimport { MapStateService } from '@dlr-eoc/services-map-state';\nimport { LayersService } from '@dlr-eoc/services-layers';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'ukis-layerentry-group',\n  templateUrl: './layerentry-group.component.html',\n  styleUrls: ['./layerentry-group.component.scss']\n})\nexport class LayerentryGroupComponent implements OnInit {\n  @HostBinding('class.group-visible') get visible() { return this.group.visible; }\n  @HostBinding('class') get cssClass() { return this.group.cssClass; }\n\n  @Input('layersSvc') layersSvc: LayersService;\n  @Input('mapState') mapState?: MapStateService;\n  @Input('group') group: LayerGroup;\n  @Input('layerGroups') layerGroups: Array<Layer | LayerGroup>;\n\n  public set openAllLayersProperties(value: boolean) {\n    if (this.group && this.group.layers.length) {\n      this.group.layers.forEach(l => l.expanded = value);\n    }\n  }\n  public get openAllLayersProperties() {\n    if (this.group && this.group.layers.length) {\n      return this.group.layers.filter(l => l.expanded === true).length === this.group.layers.length;\n    } else {\n      return false;\n    }\n  }\n  // public visible: boolean = true;\n  public canZoomToGroup = false;\n\n  public showInfo = false;\n  public showAction = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.group.bbox && this.group.bbox.length >= 4) {\n      this.canZoomToGroup = true;\n    }\n\n    if (!this.group?.action) {\n      this.showAction = false;\n    }\n  }\n\n  /**\n   * obj: {any| IDynamicComponent}\n   */\n  checkIsComponentItem(group: LayerGroup, compProp: string) {\n    const obj = group[compProp];\n    let isComp = false;\n    if (obj && typeof obj === 'object') {\n      if ('component' in obj) {\n        if (!obj.inputs) {\n          // https://2ality.com/2014/01/object-assign.html#2.3\n          const groupClone = Object.assign({ __proto__: this.group['__proto__'] }, group);\n          if (groupClone && groupClone[compProp]) {\n            delete groupClone[compProp];\n          }\n          obj.inputs = { group: groupClone };\n        } else if (obj.inputs && !obj.inputs.group) {\n          // https://2ality.com/2014/01/object-assign.html#2.3\n          const groupClone = Object.assign({ __proto__: this.group['__proto__'] }, group);\n          if (groupClone && groupClone[compProp]) {\n            delete groupClone[compProp];\n          }\n          obj.inputs = Object.assign({ group: groupClone }, obj.inputs);\n        }\n        isComp = true;\n      }\n    }\n    return isComp;\n  }\n\n  checkBaselayer(group: LayerGroup) {\n    if (group && group.filtertype === 'Baselayers') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkClassHide(layer: Layer) {\n    const hasHide = layer?.cssClass?.includes('hide') || false;\n    return !hasHide;\n  }\n\n  getLayerName(group: LayerGroup) {\n    if (group.displayName) {\n      return group.displayName;\n    } else {\n      return group.name;\n    }\n  }\n\n  setLayerGroupIndex(group: LayerGroup, dir) {\n    this.layersSvc.setGroupLayerIndex(group, dir);\n  }\n\n  setGroupLayersVisibility() {\n    this.group.visible = !this.group.visible;\n    this.layersSvc.updateLayerGroup(this.group);\n  }\n\n  removeLayerGroup(group: LayerGroup) {\n    this.layersSvc.removeLayerGroup(group);\n  }\n\n\n  zoomTo(group: LayerGroup) {\n    if (this.mapState && group.bbox && group.bbox.length >= 4) {\n      this.mapState.setExtent(group.bbox);\n    }\n  }\n\n  layerUpdate(event, group: LayerGroup) {\n    const layer = event.layer as Layer;\n    /** update event layer in the group... this is done by object reference!! */\n    /* const updateLayerIndex = group.layers.findIndex(l => l.id === layer.id);\n    if (updateLayerIndex !== -1) {\n      group.layers[updateLayerIndex] = layer;\n    } */\n    this.layersSvc.updateLayerGroup(group);\n  }\n\n\n  showProperties() {\n    this.group.expanded = !this.group.expanded;\n  }\n\n  showHideAllDetails() {\n    this.openAllLayersProperties = !this.openAllLayersProperties;\n    this.showAction = this.openAllLayersProperties;\n    this.showInfo = this.openAllLayersProperties;\n  }\n\n  isFirst(group) {\n    return this.layersSvc.isGroupFirst(group, this.layerGroups, group.filtertype);\n  }\n\n  isLast(group) {\n    return this.layersSvc.isGroupLast(group, this.layerGroups, group.filtertype);\n  }\n\n\n  // CDKDRagAndDrop -------------------------------------------------------------\n  // https://material.angular.io/cdk/drag-drop/api\n  drop(event: CdkDragDrop<Layer[]>) {\n    const groupLayers = this.group.layers;\n    const groupLeng = groupLayers.length;\n    const fiteredLayers = event.container.data; // filtered by [cdkDropListData]\n    const groupFiteredLeng = fiteredLayers.length;\n    let previousIFinal, newIFinal;\n\n    /**\n     * calc index with pipe reverse order\n     */\n    if (groupLeng === groupFiteredLeng) {\n      const previousIndex = groupLeng - event.previousIndex - 1;\n      const newIndex = groupLeng - event.currentIndex - 1;\n      previousIFinal = previousIndex;\n      newIFinal = newIndex;\n    } else {\n      /**\n       * If array is filtered get previousIndex by item.data and try to calculate ne index\n       * get layers for cdk indexes - 'connect' 'event.container.data' and the original not filtered data\n       */\n      const newLayer = fiteredLayers[event.currentIndex];\n      const previousIndex = groupLayers.findIndex(l => l.id === event.item.data.id);\n      let newIndex = groupLayers.findIndex(l => l.id === newLayer.id);\n\n      // Item is not moved\n      if (event.previousIndex === event.currentIndex) {\n        newIndex = previousIndex;\n      }\n\n      previousIFinal = previousIndex;\n      newIFinal = newIndex;\n    }\n\n    moveItemInArray(this.group.layers, previousIFinal, newIFinal);\n    this.layersSvc.updateLayerGroup(this.group);\n  }\n}\n","<div class=\"layergroup\">\n  <div class=\"head\">\n    <!-- layer expand icon -->\n    <clr-icon [attr.shape]=\"group.expanded?'folder-open':'folder'\" class=\"iconButton\" (click)=\"showProperties()\"\n      title=\"{{group.expanded?'Close':'Open'}}\"></clr-icon>\n\n\n    <!-- layer title -->\n    <div #ref class=\"item-title-replacement title\" (click)=\"showProperties()\" [title]=\"getLayerName(group)\">\n      <ng-content></ng-content>\n    </div>\n    <span *ngIf=\"ref.children.length == 0\" class=\"title\" [title]=\"getLayerName(group)\" (click)=\"showProperties()\">\n      {{getLayerName(group)}}\n    </span>\n\n    <!-- setLayerGroupIndex // for reversed layergroups on ngFor up is down -->\n    <span *ngIf=\"layerGroups.length>1\">\n      <clr-icon class=\"iconButton move-item\" [ngClass]=\"{'disabled':isLast(group)}\" shape=\"arrow\"\n        (click)=\"setLayerGroupIndex(group, 'down')\" title=\"up\"></clr-icon>\n      <clr-icon class=\"iconButton move-item\" [ngClass]=\"{'disabled':isFirst(group)}\" shape=\"arrow\"\n        (click)=\"setLayerGroupIndex(group, 'up')\" title=\"down\" dir=\"down\"></clr-icon>\n    </span>\n\n    <!-- setGroupLayersVisibility -->\n    <span *ngIf=\"!checkBaselayer(group)\">\n      <input class=\"hide\" [type]=\"'checkbox'\" [checked]=\"group.visible\" [name]=\"'group'\" [id]=\"group.id\"\n        (change)=\"setGroupLayersVisibility()\">\n      <label [for]=\"group.id\">\n        <clr-icon class=\"iconButton\" [ngClass]=\"{'is-solid':group.visible}\"\n          [attr.shape]=\"group.visible?'eye':'eye-hide'\" title=\"{{group.visible?'Hide Group':'Show Group'}}\"></clr-icon>\n      </label>\n    </span>\n  </div>\n\n  <div *ngIf=\"group.expanded\" class=\"body\">\n    <!-- tools: zoomTo, remove, open all Tabs -->\n    <div class=\"tools\">\n      <clr-icon *ngFor=\"let item of group.actions\" [attr.shape]=\"item.icon\" class=\"iconButton\"\n        (click)=\"item.action(group)\" [title]=\"item.title\">\n      </clr-icon>\n\n      <clr-icon *ngIf=\"group.action\" shape=\"cog\" class=\"iconButton\" [ngClass]=\"{'is-solid':showAction}\"\n        (click)=\"showAction = !showAction\" title=\"{{!showAction?'Show settings': 'Hide settings'}}\"></clr-icon>\n\n      <clr-icon *ngIf=\"group.description\" shape=\"info-standard\" class=\"iconButton\" [ngClass]=\"{'is-solid':showInfo}\"\n        (click)=\"showInfo = !showInfo\" title=\"{{!showInfo?'Show Info': 'Hide Info'}}\"></clr-icon>\n      <clr-icon shape=\"details\" class=\"iconButton\" [ngClass]=\"{'is-solid':openAllLayersProperties}\"\n        (click)=\"showHideAllDetails()\"\n        title=\"{{!openAllLayersProperties?'Show all layers details': 'Hide all layers details'}}\"></clr-icon>\n\n      <span></span>\n      <clr-icon *ngIf=\"canZoomToGroup\" shape=\"zoom-in\" class=\"iconButton\" (click)=\"zoomTo(group)\" title=\"Zoom to group\">\n      </clr-icon>\n      <clr-icon *ngIf=\"group.removable\" shape=\"trash\" class=\"iconButton\" (click)=\"removeLayerGroup(group)\"\n        title=\"Remove group\"></clr-icon>\n    </div>\n\n    <div class=\"info\" *ngIf=\"showInfo\">\n      <span [innerHTML]=\"group.description\"></span>\n    </div>\n    <div *ngIf=\"group.action && showAction\" class=\"tabsbody\">\n      <ng-container *ngIf=\"checkIsComponentItem(group, 'action');\">\n        <ukis-dynamic-component [(dynamicComponent)]=\"group.action\">\n        </ukis-dynamic-component>\n      </ng-container>\n    </div>\n\n\n    <!-- (cdkDropListSorted)=\"sort($event)\"  -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\"\n      [cdkDropListData]=\"group.layers | itemsfilter: checkClassHide | reverse\">\n      <ng-container *ngFor=\"let layer of group.layers | itemsfilter: checkClassHide | reverse\">\n        <div class=\"sublayers\" cdkDragLockAxis=\"y\" cdkDrag [cdkDragData]=\"{id:layer.id}\">\n          <ukis-layerentry [expanded]=\"openAllLayersProperties\" [layersSvc]=\"layersSvc\" [mapState]=\"mapState\"\n            [layer]=\"layer\" [group]=\"group\" (update)=\"layerUpdate($event, group)\">\n            <span class=\"move-item\" cdkDragHandle>\n              {{layer.displayName || layer.name}}\n            </span>\n          </ukis-layerentry>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\n\nimport { LayersService } from '@dlr-eoc/services-layers';\nimport { MapStateService } from '@dlr-eoc/services-map-state';\nimport { LayerGroup, Layer } from '@dlr-eoc/services-layers';\nimport { Subscription } from 'rxjs';\n\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'ukis-layer-control',\n  templateUrl: './layer-control.component.html',\n  styleUrls: ['./layer-control.component.scss']\n})\nexport class LayerControlComponent implements OnInit, OnDestroy {\n  @Input('layersSvc') layersSvc: LayersService;\n  @Input('mapStateSvc') mapStateSvc?: MapStateService;\n  @Input('layerfilter') layerfilter: Layer['filtertype'] = 'Layers';\n\n  layerGroupsSubscription: Subscription;\n  layersSubscription: Subscription;\n  layergroups: Array<Layer | LayerGroup>;\n\n\n  constructor() {\n    this.layergroups = [];\n  }\n\n  ngOnInit() {\n    this.layerGroupsSubscription = this.layersSvc.getLayerGroups().subscribe(layergroups => {\n      this.layergroups = layergroups;\n      /**\n       * filter only in template so reordering of layers with set layergroups is working\n       */\n      // this.layergroups = layergroups.filter((group) => group.filtertype === this.layerfilter || group.filtertype === this.layerfilter);\n    });\n  }\n\n  isLayerGroup(group: Layer | LayerGroup) {\n    if (group instanceof LayerGroup) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.layerGroupsSubscription.unsubscribe();\n  }\n\n\n  // CDKDRagAndDrop -------------------------------------------------------------\n  // https://material.angular.io/cdk/drag-drop/api\n  drop(event: CdkDragDrop<(Layer | LayerGroup)[]>) {\n    const groupLayers = this.layergroups;\n    const groupLeng = groupLayers.length;\n    const fiteredLayers = event.container.data; // filtered by [cdkDropListData]\n    const groupFiteredLeng = fiteredLayers.length;\n    let previousIFinal, newIFinal;\n\n    /**\n     * calc index with pipe reverse order\n     */\n    if (groupLeng === groupFiteredLeng) {\n      const previousIndex = groupLeng - event.previousIndex - 1;\n      const newIndex = groupLeng - event.currentIndex - 1;\n      previousIFinal = previousIndex;\n      newIFinal = newIndex;\n    } else {\n      /**\n       * If array is filtered get previousIndex by item.data and try to calculate ne index\n       * get layers for cdk indexes - 'connect' 'event.container.data' and the original not filtered data\n       */\n      const newLayer = fiteredLayers[event.currentIndex];\n      const previousIndex = groupLayers.findIndex(l => l.id === event.item.data.id);\n      let newIndex = groupLayers.findIndex(l => l.id === newLayer.id);\n\n      // Item is not moved\n      if (event.previousIndex === event.currentIndex) {\n        newIndex = previousIndex;\n      }\n\n      previousIFinal = previousIndex;\n      newIFinal = newIndex;\n    }\n\n    this.layersSvc.arrayMove(this.layergroups, previousIFinal, newIFinal);\n    this.layersSvc.setLayerGroups(this.layergroups);\n  }\n\n  checkBaselayer(layer: Layer, group?: LayerGroup) {\n    if (layer.filtertype === 'Baselayers' || group && group.filtertype === 'Baselayers') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkClassHide(layerOrGroup: Layer | LayerGroup) {\n    const hasHide = layerOrGroup?.cssClass?.includes('hide') || false;\n    return !hasHide;\n  }\n}\n","<div cdkDropList (cdkDropListDropped)=\"drop($event)\"\n  [cdkDropListData]=\"layergroups | itemsfilter: checkClassHide | reverse\">\n  <ng-container *ngFor=\"let group of layergroups | itemsfilter: checkClassHide | reverse\">\n    <div class=\"list-item\" cdkDragLockAxis=\"y\" cdkDrag [cdkDragData]=\"{id:group.id}\">\n      <ukis-layerentry-group *ngIf=\" isLayerGroup(group) && group.filtertype===layerfilter\" [layersSvc]=\"layersSvc\"\n        [mapState]=\"mapStateSvc\" [group]=\"group\" [layerGroups]=\"layergroups\">\n        <span class=\"move-item\" cdkDragHandle>\n          {{group.displayName || group.name}}\n        </span>\n      </ukis-layerentry-group>\n      <ukis-layerentry *ngIf=\"!isLayerGroup(group) && group.filtertype === layerfilter\" [layerGroups]=\"layergroups\"\n        [expanded]=\"false\" [layersSvc]=\"layersSvc\" [mapState]=\"mapStateSvc\" [layer]=\"group\" [group]=\"null\">\n        <span class=\"move-item\" cdkDragHandle>\n          {{group.displayName || group.name}}\n        </span>\n      </ukis-layerentry>\n    </div>\n  </ng-container>\n\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\n\nimport { LayersService } from '@dlr-eoc/services-layers';\nimport { MapStateService } from '@dlr-eoc/services-map-state';\nimport { LayerGroup, Layer } from '@dlr-eoc/services-layers';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ukis-base-layer-control',\n  templateUrl: './base-layer-control.component.html',\n  styleUrls: ['./base-layer-control.component.scss']\n})\nexport class BaseLayerControlComponent implements OnInit, OnDestroy {\n  @Input('layersSvc') layersSvc: LayersService;\n  @Input('mapStateSvc') mapStateSvc?: MapStateService;\n\n  layerGroupsSubscription: Subscription;\n  layersSubscription: Subscription;\n  layergroups: Array<Layer | LayerGroup>;\n\n\n  constructor() {\n    this.layergroups = [];\n  }\n\n  ngOnInit() {\n    this.layerGroupsSubscription = this.layersSvc.getLayerGroups().subscribe(layergroups => {\n      this.layergroups = layergroups.filter((group) => group.filtertype === 'Baselayers');\n      // console.log(this.layergroups)\n    });\n  }\n\n  isLayerGroup(group: Layer | LayerGroup) {\n    if (group instanceof LayerGroup) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.layerGroupsSubscription.unsubscribe();\n  }\n\n}\n","<div class=\"list-item\" *ngFor=\"let group of layergroups | reverse;\">\n  <ukis-layerentry-group *ngIf=\"isLayerGroup(group)\" [layersSvc]=\"layersSvc\" [mapState]=\"mapStateSvc\" [group]=\"group\"\n    [layerGroups]=\"layergroups\"></ukis-layerentry-group>\n\n  <ukis-layerentry *ngIf=\"!isLayerGroup(group)\" [layerGroups]=\"layergroups\" [expanded]=\"false\" [layersSvc]=\"layersSvc\"\n    [mapState]=\"mapStateSvc\" [layer]=\"group\" [group]=\"null\"></ukis-layerentry>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { LayerControlComponent } from './layer-control/layer-control.component';\nimport { LayerentryComponent } from './layerentry/layerentry.component';\nimport { LayerentryGroupComponent } from './layerentry-group/layerentry-group.component';\nimport { ObjTypePipe, ItemsFilterPipe } from './utils/obj-type.pipe';\nimport { ReversePipe } from './utils/array-reverse.pipe';\n\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { BaseLayerControlComponent } from './base-layer-control/base-layer-control.component';\nimport { CoreUiModule } from '@dlr-eoc/core-ui';\n\n\n@NgModule({\n  declarations: [LayerControlComponent, LayerentryComponent, LayerentryGroupComponent, ObjTypePipe, ItemsFilterPipe, ReversePipe, BaseLayerControlComponent],\n  imports: [CommonModule, ClarityModule, FormsModule, DragDropModule, CoreUiModule],\n  exports: [LayerControlComponent, LayerentryComponent, LayerentryGroupComponent, ObjTypePipe, ItemsFilterPipe, ReversePipe, BaseLayerControlComponent],\n})\nexport class LayerControlModule { }\n","/*\n * Public API Surface of layer-control\n */\n\nexport * from './lib/layer-control/layer-control.component';\nexport * from './lib/base-layer-control/base-layer-control.component';\nexport * from './lib/layer-control.module';\nexport * from './lib/utils/obj-type.pipe';\nexport * from './lib/utils/array-reverse.pipe';\nexport * from './lib/layerentry/layerentry.component';\nexport * from './lib/layerentry-group/layerentry-group.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.LayerentryComponent","i3","i4","i6.ReversePipe","i7.ItemsFilterPipe","i1.LayerentryGroupComponent","i5.ReversePipe","i6.ItemsFilterPipe","i4.ReversePipe"],"mappings":"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"}