{"version":3,"file":"dlr-eoc-map-ol.mjs","sources":["../../../projects/map-ol/src/lib/map-ol.service.ts","../../../projects/map-ol/src/lib/map-ol.component.ts","../../../projects/map-ol/src/lib/map-ol.component.html","../../../projects/map-ol/src/lib/map-ol.module.ts","../../../projects/map-ol/src/public-api.ts","../../../projects/map-ol/src/dlr-eoc-map-ol.ts"],"sourcesContent":["import { Injectable, ComponentFactoryResolver, ApplicationRef, Injector, ComponentRef } from '@angular/core';\n\n\nimport { Layer, VectorLayer, CustomLayer, RasterLayer, popup, WmtsLayer, WmsLayer, TGeoExtent, ILayerOptions, StackedLayer, StackedLayertype, CustomLayertype, WfsLayertype, KmlLayertype, GeojsonLayertype, TmsLayertype, WmtsLayertype, WmsLayertype, XyzLayertype, IVectorLayerOptions, IAnyObject } from '@dlr-eoc/services-layers';\n\nimport olMap from 'ol/Map';\nimport olView from 'ol/View';\nimport { ViewOptions as olViewOptions } from 'ol/View';\n\nimport olBaseLayer from 'ol/layer/Base';\nimport olSource from 'ol/source/Source';\nimport olGeometry from 'ol/geom/Geometry';\nimport olLayer from 'ol/layer/Layer';\nimport { Options as olLayerOptions } from 'ol/layer/Layer';\nimport CanvasVectorLayerRenderer from 'ol/renderer/canvas/VectorLayer';\nimport CanvasTileLayerRenderer from 'ol/renderer/canvas/TileLayer';\nimport CanvasImageLayerRenderer from 'ol/renderer/canvas/ImageLayer';\nimport olLayerGroup from 'ol/layer/Group';\nimport { Options as olLayerGroupOptions } from 'ol/layer/Group';\nimport olOverlay from 'ol/Overlay';\nimport { Options as olOverlayOptions } from 'ol/Overlay';\n\nimport olBaseTileLayer from 'ol/layer/BaseTile';\nimport { Options as olBaseTileLayerOptions } from 'ol/layer/BaseTile';\nimport olBaseVectorLayer from 'ol/layer/BaseVector';\nimport { Options as olBaseVectorLayerOptions } from 'ol/layer/BaseVector';\nimport olBaseImageLayer from 'ol/layer/BaseImage';\nimport { Options as olBaseImageLayerOptions } from 'ol/layer/BaseImage';\n\nimport olImageLayer from 'ol/layer/Image';\n\nimport olTileLayer from 'ol/layer/Tile';\nimport olVectorLayer from 'ol/layer/Vector';\nimport olVectorTile from 'ol/source/VectorTile';\n\nimport olVectorTileLayer from 'ol/layer/VectorTile';\nimport { Options as olVectorTileLayerOptions } from 'ol/layer/VectorTile';\nimport olVectorTileSource from 'ol/source/VectorTile';\nimport { applyStyle } from 'ol-mapbox-style';\nimport { createXYZ } from 'ol/tilegrid';\nimport olMVT from 'ol/format/MVT';\n\nimport olXYZ from 'ol/source/XYZ';\nimport olTileSource from 'ol/source/Tile';\n\nimport { Options as olXYZOptions } from 'ol/source/XYZ';\nimport olTileWMS from 'ol/source/TileWMS';\nimport { Options as olTileWMSOptions } from 'ol/source/TileWMS';\nimport olImageWMS from 'ol/source/ImageWMS';\nimport { Options as olImageWMSOptions } from 'ol/source/ImageWMS';\nimport olTileImageSource from 'ol/source/TileImage';\nimport olImageSource from 'ol/source/Image';\nimport olWMTS from 'ol/source/WMTS';\nimport { Options as olWMTSOptions } from 'ol/source/WMTS';\nimport olWMTSTileGrid from 'ol/tilegrid/WMTS';\nimport { Options as olWMTSTileGridOptions } from 'ol/tilegrid/WMTS';\nimport olTileGrid from 'ol/tilegrid/TileGrid';\nimport olVectorSource from 'ol/source/Vector';\nimport olRasterSource from 'ol/source/Raster';\nimport olCluster from 'ol/source/Cluster';\nimport { Options as olClusterOptions } from 'ol/source/Cluster';\nimport olFeature from 'ol/Feature';\n\nimport olCollection from 'ol/Collection';\nimport olGeoJSON from 'ol/format/GeoJSON';\nimport olKML from 'ol/format/KML';\nimport olProjection from 'ol/proj/Projection';\nimport { Options as olProjectionOptions } from 'ol/proj/Projection';\nimport { transformExtent, get as getProjection, transform } from 'ol/proj';\nimport { register as olRegister } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport { extend as olExtend, getWidth as olGetWidth, getHeight as olGetHeight, getTopLeft as olGetTopLeft, containsCoordinate as olContainsCoordinate } from 'ol/extent';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from 'ol/tilegrid/common';\nimport { easeOut } from 'ol/easing.js';\n\nimport olStyle from 'ol/style/Style';\nimport olText from 'ol/style/Text';\nimport olFill from 'ol/style/Fill';\nimport olCircleStyle from 'ol/style/Circle';\nimport olStroke from 'ol/style/Stroke';\n\nimport { DragBox } from 'ol/interaction';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olRenderFeature from 'ol/render/Feature';\nimport olEvent from 'ol/events/Event';\nimport { Options as DragBoxOptions } from 'ol/interaction/DragBox';\nimport { getUid as olGetUid } from 'ol/util';\nimport { Subject } from 'rxjs';\nimport { flattenLayers } from '@dlr-eoc/utils-maps';\nimport OverlayPositioning from 'ol/OverlayPositioning';\n\n\nexport declare type Tgroupfiltertype = 'baselayers' | 'layers' | 'overlays' | 'Baselayers' | 'Overlays' | 'Layers';\nconst OVERLAY_TYPE_KEY = 'type';\nconst FILTER_TYPE_KEY = 'filtertype';\nconst ID_KEY = 'id';\nconst TITLE_KEY = 'title';\nconst WebMercator = 'EPSG:3857';\nconst WGS84 = 'EPSG:4326';\n\n/**\n * While @dlr-eoc/services-layers.popup already contains instructions about how to build a popup,\n * IPopupArgs adds additional, map-ol-specific context like the olLayer, the feature, and the olMapBrowserEvent.\n */\nexport interface IPopupArgs {\n  modelName: string;\n  properties: popup['properties']; // will be filtered by popup['filterkeys'] (if given)\n  layer: olLayer<any>;\n  feature?: olFeature<any> | olRenderFeature;\n  event: olMapBrowserEvent<PointerEvent>;\n  popupFn?: popup['popupFunction'];\n  dynamicPopup?: popup['dynamicPopup'];\n}\n\n\nexport interface IDynamicPopupArgs {\n  properties: popup['properties']; // will be filtered by popup['filterkeys'] (if given)\n  layer: IPopupArgs['layer'];\n  feature?: IPopupArgs['feature'];\n  event: olMapBrowserEvent<PointerEvent>;\n  dynamicPopup: popup['dynamicPopup'];\n}\n\n\ntype tmsReturnType<T> = T extends RasterLayer ? olTileLayer<olTileSource> :\n  T extends VectorLayer ? olVectorTileLayer : never;\n\ntype LayerOptionsSources = olTileSource | olVectorTileSource | olImageSource | olSource;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapOlService {\n  public map: olMap; // ol.Map;\n  public view: olView;\n  private viewOptions: olViewOptions;\n  public EPSG: string;\n  private hitTolerance = 0;\n  private hitLayerCurr = null;\n  private hitLayerPrev = null;\n  /** 'olProjection' */\n  public projectionChange = new Subject<olProjection>();\n  /**\n   * This object keeps track of currently bound angular-components that are being used as popups.\n   * We keep a reference to them here so that we can remove them again after they are no longer displayed.\n   */\n  private dynamicPopupComponents: Map<string, ComponentRef<any>> = new Map();\n\n  constructor(\n    private crf: ComponentFactoryResolver,\n    private app: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.map = new olMap({ controls: [] });\n    this.view = new olView();\n    this.EPSG = WebMercator;\n  }\n\n  /**\n   * if this is used in an angular component then set the target after the view is created\n   * e.g. this.map.setTarget(this.mapDivView.nativeElement) in ngAfterViewInit()\n   */\n  public createMap(target?: HTMLElement) {\n    const zoom = 0;\n    const center = {\n      lat: 0,\n      lon: 0\n    };\n\n    const baselayerGroup = new olLayerGroup({\n      layers: []\n    });\n    baselayerGroup.set(FILTER_TYPE_KEY, 'baselayers');\n    baselayerGroup.set(TITLE_KEY, 'Base maps');\n    baselayerGroup.set(ID_KEY, 'ID_filtertype_baselayers');\n\n\n    const layersGroup = new olLayerGroup({\n      layers: []\n    });\n    layersGroup.set(FILTER_TYPE_KEY, 'layers');\n    layersGroup.set(TITLE_KEY, 'Layers');\n    layersGroup.set(ID_KEY, 'ID_filtertype_layers');\n\n    // ---------------------------------------------------------------------------------------------------\n    const overlayGroup = new olLayerGroup({\n      layers: []\n    });\n    overlayGroup.set(FILTER_TYPE_KEY, 'overlays');\n    overlayGroup.set(TITLE_KEY, 'Overlays');\n    overlayGroup.set(ID_KEY, 'ID_filtertype_overlays');\n\n    /**\n     * set default viewOptions\n     */\n    this.viewOptions = {\n      center: transform([center.lon, center.lat], WGS84, this.EPSG),\n      zoom,\n      projection: getProjection(this.EPSG)\n    };\n\n    if (this.view['constrainRotation']) {\n      this.viewOptions.constrainRotation = this.view['constrainRotation'];\n    }\n\n    if (this.view['enableRotation']) {\n      this.viewOptions.enableRotation = this.view['enableRotation'];\n    }\n\n    if (this.view['extent']) {\n      this.viewOptions.extent = this.view['extent'];\n    }\n\n    if (this.view['constrainOnlyCenter']) {\n      this.viewOptions.constrainOnlyCenter = this.view['constrainOnlyCenter'];\n    }\n\n    if (this.view['smoothExtentConstraint']) {\n      this.viewOptions.smoothExtentConstraint = this.view['smoothExtentConstraint'];\n    }\n\n    if (this.view.getMaxResolution()) {\n      this.viewOptions.maxResolution = this.view.getMaxResolution();\n    }\n\n    if (this.view.getMinResolution()) {\n      this.viewOptions.minResolution = this.view.getMinResolution();\n    }\n\n    if (this.view.getMaxZoom()) {\n      this.viewOptions.maxZoom = this.view.getMaxZoom();\n    }\n\n    if (this.view.getMinZoom()) {\n      this.viewOptions.minZoom = this.view.getMinZoom();\n    }\n\n    if (this.view['multiWorld']) {\n      this.viewOptions.multiWorld = this.view['multiWorld'];\n    }\n\n    if (this.view['constrainResolution']) {\n      this.viewOptions.constrainResolution = this.view['constrainResolution'];\n    }\n\n    if (this.view['smoothResolutionConstraint']) {\n      this.viewOptions.smoothResolutionConstraint = this.view['smoothResolutionConstraint'];\n    }\n\n    if (this.view.getResolution()) {\n      this.viewOptions.resolution = this.view.getResolution();\n    }\n\n    if (this.view.getResolutions()) {\n      this.viewOptions.resolutions = this.view.getResolutions();\n    }\n\n    if (this.view['rotation']) {\n      this.viewOptions.rotation = this.view['rotation'];\n    }\n\n    if (this.view['zoomFactor']) {\n      this.viewOptions.zoomFactor = this.view['zoomFactor'];\n    }\n    const tempview = new olView(this.viewOptions);\n\n    /** define map in constructor so it is created before to use it in projects onInit Method  */\n    [baselayerGroup, layersGroup, overlayGroup].map(layer => this.map.addLayer(layer));\n    this.map.setView(tempview);\n    // this.map.getControls().clear();\n    this.view = this.map.getView();\n    this.setProjection(this.EPSG);\n    if (target) {\n      this.map.setTarget(target);\n    }\n    return {\n      map: this.map,\n      view: this.view\n    };\n  }\n\n  public setHitTolerance(tolerance: number) {\n    this.hitTolerance = tolerance;\n  }\n\n  public getHitTolerance() {\n    return this.hitTolerance;\n  }\n\n  /**\n   * See this example:\n   * https://openlayers.org/en/latest/examples/box-selection.html\n   */\n  public addBboxSelection(conditionForDrawing: (evt: any) => boolean, onBoxStart?: (evt: olEvent) => void, onBoxEnd?: (ext, evt: olEvent) => void, dragBoxOptions?: DragBoxOptions) {\n    const options = {\n      className: 'ol-drag-select',\n      condition: conditionForDrawing,\n    };\n    Object.assign(options, dragBoxOptions);\n    const dragBox = new DragBox(dragBoxOptions);\n    if (onBoxStart) {\n      /** TODO: check Types on the next ol update */\n      (dragBox as any).on('boxstart', (evt) => {\n        onBoxStart(evt);\n      });\n    }\n\n    if (onBoxEnd) {\n      dragBox.on('boxend', (evt) => {\n        const extent = dragBox.getGeometry().getExtent();\n        onBoxEnd(extent, evt);\n      });\n    }\n\n    this.map.addInteraction(dragBox);\n    return dragBox;\n  }\n\n  /**\n   * get an array of olLayers from a group type\n   */\n  public getLayers(filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLowerCase() as Tgroupfiltertype;\n    let layers: olBaseLayer[];\n    this.map.getLayers().getArray().forEach((layerGroup: olLayerGroup) => {\n      if (layerGroup.get(FILTER_TYPE_KEY) === lowerType) {\n        layers = layerGroup.getLayers().getArray();\n      }\n    });\n    return layers;\n  }\n\n  private getLayersFromGroup(group: olLayerGroup, filtertype?: string, recursive = false) {\n    const layers = group.getLayers().getArray();\n    let tempLayers = layers;\n    if (recursive) {\n      let groups: olBaseLayer[] = [].concat(layers);\n      layers.forEach(l => {\n        if (l instanceof olLayerGroup) {\n          groups = groups.concat(this.getLayersFromGroup(l, filtertype, true));\n        }\n      });\n      tempLayers = groups;\n    }\n\n    if (filtertype) {\n      return tempLayers.filter(l => l.get(FILTER_TYPE_KEY) && l.get(FILTER_TYPE_KEY).toLowerCase() === filtertype.toLowerCase());\n    } else {\n      return tempLayers;\n    }\n  }\n\n  public getLayerByKey(key: { key: string, value: string }, filtertype?: Tgroupfiltertype) {\n    const layers = this.getLayersFromGroup(this.map.getLayerGroup(), filtertype);\n    const flattenedLayers = flattenLayers(layers);\n    const keyLayers: olBaseLayer[] = [];\n    flattenedLayers.forEach((item) => {\n      if (item.get(key.key) && item.get(key.key) === key.value) {\n        if (keyLayers.indexOf(item) === -1) {\n          keyLayers.push(item);\n        }\n      }\n    });\n    if (!keyLayers.length) {\n      const subLayers = this.getLayersFromGroup(this.map.getLayerGroup(), filtertype, true); // (map.getLayerGroup(), filtertype, filtertypeKey, true);\n      if (subLayers.length) {\n        subLayers.forEach((item) => {\n          if (item.get(key.key) && item.get(key.key) === key.value) {\n            if (keyLayers.indexOf(item) === -1) {\n              keyLayers.push(item);\n            }\n          }\n        });\n      }\n    }\n\n    // there could maybe more the one layers with the same key!!!!\n    if (keyLayers.length === 1) {\n      return keyLayers[0];\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * set a FilterType to a Layer or Group recursively\n   *\n   * @param key [key='filtertype']\n   */\n  private setRecursiveKey(layer: olBaseLayer, value: string, key = FILTER_TYPE_KEY) {\n    layer.set(key, value);\n    if (layer instanceof olLayerGroup) {\n      layer.getLayers().forEach(l => {\n        this.setRecursiveKey(l, value, key);\n      });\n    }\n  }\n\n  /**\n   * add a olLayer to a group if it is not there\n   */\n  public addLayer(layer: olBaseLayer, filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLowerCase() as Tgroupfiltertype;\n    let layers;\n    this.map.getLayers().getArray().forEach((layerGroup: olLayerGroup) => {\n      if (layerGroup.get(FILTER_TYPE_KEY) === lowerType) {\n        if (!this.isLayerInGroup(layer, layerGroup)) {\n          layers = layerGroup.getLayers().getArray();\n          this.setRecursiveKey(layer, lowerType, FILTER_TYPE_KEY);\n          layers.push(layer);\n          layerGroup.setLayers(new olCollection(layers));\n        }\n      }\n    });\n    return layers;\n  }\n\n  private isLayerInGroup(layer: olBaseLayer, layerGroup: olLayerGroup) {\n    const layers = layerGroup.getLayers().getArray();\n    const haseLayer = layers.filter(l => l.get('id') === layer.get('id'));\n    if (haseLayer.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n    * Get all direkt Layer Groups added to the map\n    *\n    * @param filtertypeKey [filtertypeKey='filtertype']\n    */\n  private getLayerGroups(filtertype?: string) {\n    const layerGroups: olLayerGroup[] = [];\n    this.map.getLayers().forEach((lg: olLayerGroup | olBaseLayer) => {\n      if (lg instanceof olLayerGroup) {\n        if (filtertype) {\n          if (lg.get(FILTER_TYPE_KEY) && lg.get(FILTER_TYPE_KEY).toLowerCase() === filtertype.toLowerCase()) {\n            layerGroups.push(lg);\n          }\n        } else {\n          layerGroups.push(lg);\n        }\n      }\n    });\n    return layerGroups;\n  }\n\n\n  /**\n   * add a array of olLayers to a group if they are not there\n   */\n  public addLayers(layers: olBaseLayer[], filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLocaleLowerCase() as Tgroupfiltertype;\n    let newLayers: olBaseLayer[];\n    const layerGroups = this.getLayerGroups(lowerType);\n    layerGroups.forEach(lg => {\n      const groupLayers = lg.getLayers();\n      if (groupLayers.getLength() > 0) {\n        // I think doing it like this should be more performant like as using the addLayer in a loop\n        newLayers = lg.getLayers().getArray();\n        layers.map(layer => {\n          if (!this.isLayerInGroup(layer, lg)) {\n            newLayers.push(layer);\n          }\n        });\n      } else {\n        newLayers = layers;\n      }\n      newLayers.forEach(l => {\n        if (l instanceof olLayerGroup) {\n          this.setRecursiveKey(l, lowerType, FILTER_TYPE_KEY);\n        }\n      });\n      lg.setLayers(new olCollection(newLayers));\n    });\n    return newLayers;\n  }\n\n  /**\n   * reset a group with an array of olLayers\n   */\n  public setLayers(layers: olBaseLayer[], filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLocaleLowerCase() as Tgroupfiltertype;\n    const layerGroups = this.getLayerGroups(lowerType);\n    layers.forEach(l => {\n      if (l instanceof olLayerGroup) {\n        this.setRecursiveKey(l, filtertype.toLocaleLowerCase(), FILTER_TYPE_KEY);\n      }\n    });\n    layerGroups.forEach(l => {\n      this.cleanUpEventListeners(l, layers);\n      l.setLayers(new olCollection(layers));\n    });\n    return layers;\n  }\n\n  /**\n   * Clean up event listeners from layers and sources\n   *\n   * TODO: is this needed? when layers or sources are removed, then there is no Target anymore which listens for events?\n   * there are also other functions like removeLayerByKey(), removeAllLayers()\n   */\n  private cleanUpEventListeners(layerGroup: olLayerGroup, newLayers: olBaseLayer[]) {\n    /** get Difference of old layers and new layers */\n    const layersToRemove = layerGroup.getLayers().getArray().filter(x => !newLayers.map(l => l.get('id')).includes(x.get('id')));\n    this.removeListenersFromOldLayers(layersToRemove);\n\n    // TODO: is this done by setLayers??\n    layersToRemove.forEach(l => layerGroup.getLayers().remove(l));\n  }\n\n  /**\n   * on() and un() are functions of olObservable which extends EventTarget\n   *\n   * https://github.com/openlayers/openlayers/blob/v6.5.0/src/ol/events/Target.js#L145\n   * https://github.com/openlayers/openlayers/blob/v6.5.0/src/ol/events/Target.js#L134\n   */\n  private addEventsToLayer(ukisLayer: Layer, olLayer: olLayer<any>, olSource: olSource) {\n    if (ukisLayer.events) {\n      if (ukisLayer.events.layer) {\n        ukisLayer.events.layer.forEach(e => {\n          const listeners = olLayer.getListeners(e.event);\n          /** only add listener if it was not registered on the olLayer object (for CustomLayer) */\n          if (!listeners) {\n            /** TODO: check Types on the next ol update - we only define a string so the user has to check if the right event is used */\n            olLayer.on(e.event as any, e.listener);\n          }\n        });\n      }\n\n      if (ukisLayer.events.source) {\n        ukisLayer.events.source.forEach(e => {\n          const listeners = olSource.getListeners(e.event);\n          /** only add listener if it was not registered on the olSource object (for CustomLayer) */\n          if (!listeners) {\n            /** TODO: check Types on the next ol update - we only define a string so the user has to check if the right event is used */\n            olSource.on(e.event as any, e.listener);\n          }\n        });\n      }\n    }\n  }\n\n  /** TODO: try to remove/replace this function - Property 'disposeInternal' is protected ol function */\n  private removeListenersFromOldLayers(layers: Array<olBaseLayer | olLayerGroup>) {\n    const disposeLayerInternal = (layer: olBaseLayer) => {\n      if (typeof (layer as any).getSource === 'function') {\n        const source = (layer as any).getSource() as olSource;\n        if (source) {\n          // https://github.com/dlr-eoc/ukis-frontend-libraries/issues/100\n          if (source instanceof olRasterSource) {\n            source.dispose();\n          }\n          if (source.hasListener()) {\n            (source as any).disposeInternal();\n          }\n        }\n      }\n      if (layer.hasListener()) {\n        (layer as any).disposeInternal();\n      }\n    };\n\n    layers.forEach(l => {\n      if (l instanceof olLayerGroup) {\n        l.getLayers().forEach(subL => {\n          disposeLayerInternal(subL);\n        });\n      } else if (l instanceof olBaseLayer) {\n        disposeLayerInternal(l);\n      }\n    });\n  }\n\n  /**\n   * get corresponding Layer Group on which the layer is added\n   */\n  private getLayerGroupForLayer(layer: olBaseLayer) {\n    const subLayers = this.getLayersFromGroup(this.map.getLayerGroup(), null, true);\n    subLayers.push(this.map.getLayerGroup());\n    let lyerGroup: { group: olLayerGroup, layer: olBaseLayer } | null = null;\n    subLayers.forEach((l) => {\n      if (l instanceof olLayerGroup) {\n        const groupLayers = this.getLayersFromGroup(l);\n        const hasLayer = groupLayers.find(i => i === layer);\n        if (hasLayer) {\n          lyerGroup = {\n            group: l,\n            layer: hasLayer\n          };\n        }\n      }\n    });\n    return lyerGroup;\n  }\n\n\n  public removeLayerByKey(key: { key: string, value: string }, filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLocaleLowerCase() as Tgroupfiltertype;\n    const layer = this.getLayerByKey(key, lowerType);\n    if (layer) {\n      const gropObj = this.getLayerGroupForLayer(layer);\n      if (gropObj.group) {\n        const filterdLayers = this.getLayersFromGroup(gropObj.group).filter(i => i !== layer);\n        gropObj.group.setLayers(new olCollection(filterdLayers));\n      }\n    }\n  }\n\n  public updateLayerByKey(key: { key: string, value: string }, newLayer: olBaseLayer, filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLocaleLowerCase() as Tgroupfiltertype;\n    this.map.getLayers().forEach((layerGroup: olLayerGroup) => {\n      if (layerGroup.get(FILTER_TYPE_KEY) === lowerType) {\n        const groupLayers = layerGroup.getLayers();\n        groupLayers.forEach((oldLayer, index) => {\n          if (oldLayer.get(key.key) && oldLayer.get(key.key) === key.value) {\n\n            const newProperties = newLayer.getProperties();\n            const newExtent = newLayer.getExtent();\n\n            const newMaxZoom = newLayer.getMaxZoom();\n            const newMinZoom = newLayer.getMinZoom();\n\n            const newOpacity = newLayer.getOpacity();\n            const newVisible = newLayer.getVisible();\n\n            const newZIndex = newLayer.getZIndex();\n\n            if (oldLayer instanceof olLayer && newLayer instanceof olLayer) {\n              const newSource = newLayer.getSource();\n              oldLayer.setSource(newSource);\n            }\n            if (newProperties) {\n              oldLayer.setProperties(newProperties);\n            }\n            if (newExtent) {\n              oldLayer.setExtent(newExtent);\n            }\n            if (newMaxZoom) {\n              oldLayer.setMaxZoom(newMaxZoom);\n            }\n            if (newMinZoom) {\n              oldLayer.setMinZoom(newMinZoom);\n            }\n            if (newOpacity) {\n              oldLayer.setOpacity(newOpacity);\n            }\n            if (newVisible) {\n              oldLayer.setVisible(newVisible);\n            }\n            if (newZIndex) {\n              oldLayer.setZIndex(newZIndex);\n            }\n            oldLayer.changed();\n            groupLayers.setAt(index, oldLayer);\n          }\n        });\n        layerGroup.setLayers(groupLayers);\n      }\n    });\n  }\n\n  public removeAllLayers(filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLowerCase() as Tgroupfiltertype;\n    let layers;\n    this.map.getLayers().getArray().forEach((layerGroup: olLayerGroup) => {\n      if (layerGroup.get(FILTER_TYPE_KEY) === lowerType) {\n        layers = layerGroup.getLayers();\n        layers.clear();\n      }\n    });\n\n  }\n\n  /**\n   * This function resets/adds all olLayers of a type with the new UKIS-Layers\n   *\n   * if only one group of them map is used and setLayers is called then the map flickers!\n   * this is because all layers are newly created and each get new ol_uid's\n   */\n  public setUkisLayers(layers: Array<Layer>, filtertype: Tgroupfiltertype) {\n    const lowerType = filtertype.toLowerCase() as Tgroupfiltertype;\n    const tempLayers: olBaseLayer[] = [];\n    // TODO try to deep check if a layer if exactly the same and dont create it new\n    // create hash from layer???\n\n    if (layers.length < 1 && lowerType !== 'baselayers') {\n      // this.removeAllLayers('overlays');\n      // this.removeAllLayers('layers');\n      this.removeAllLayers(lowerType);\n    } else {\n      layers.forEach((newLayer) => {\n        const layer = this.create_layers(newLayer);\n        // check if layer not undefined\n        if (layer) {\n          tempLayers.push(layer);\n        }\n      });\n    }\n\n    if (tempLayers.length > 0) {\n      this.setLayers(tempLayers, lowerType);\n      // TODO: checkt to replace type with filtertype -> but breaking Change!!\n      const newTempLayer: { type: Tgroupfiltertype, layers: olBaseLayer[] } = {\n        type: lowerType, layers: tempLayers\n      };\n      return newTempLayer;\n    }\n  }\n\n  /** This function resets/adds a olLayer of a type with the new UKIS-Layer */\n  public setUkisLayer(newLayer: Layer, filtertype?: Tgroupfiltertype): void {\n    if (!filtertype) {\n      filtertype = newLayer.filtertype;\n    }\n    const lowerType = filtertype.toLowerCase() as Tgroupfiltertype;\n    const oldLayers = this.getLayers(lowerType);\n    const oldLayer = oldLayers.find(l => l.get('id') === newLayer.id);\n    const newOlLayer = this.create_layers(newLayer);\n    if (oldLayer) {\n      this.removeLayerByKey({ key: ID_KEY, value: oldLayer.get(ID_KEY) }, filtertype);\n      this.addLayer(newOlLayer, filtertype);\n    } else {\n      this.addLayer(newOlLayer, filtertype);\n    }\n  }\n\n  public updateUkisLayer(newLayer: Layer, filtertype?: Tgroupfiltertype): void {\n    if (!filtertype) {\n      filtertype = newLayer.filtertype;\n    }\n    const lowerType = filtertype.toLowerCase() as Tgroupfiltertype;\n    const oldLayers = this.getLayers(lowerType);\n    const oldLayer = oldLayers.find(l => l.get('id') === newLayer.id);\n    const newOlLayer = this.create_layers(newLayer);\n    if (newOlLayer) {\n      this.updateLayerByKey({ key: ID_KEY, value: oldLayer.get(ID_KEY) }, newOlLayer, filtertype);\n    }\n  }\n\n\n  private create_layers(newLayer: Layer) {\n    let newOlLayer: olTileLayer<olTileSource> | olVectorLayer<olVectorSource<olGeometry>> | olBaseLayer;\n    switch (newLayer.type) {\n      case XyzLayertype:\n        newOlLayer = this.create_xyz_layer(newLayer as RasterLayer);\n        break;\n      case WmsLayertype:\n        newOlLayer = this.create_wms_layer(newLayer as WmsLayer);\n        break;\n      case WmtsLayertype:\n        newOlLayer = this.create_wmts_layer(newLayer as WmtsLayer);\n        break;\n      case TmsLayertype:\n        newOlLayer = this.create_tms_layer(newLayer as VectorLayer | RasterLayer);\n        break;\n      case GeojsonLayertype:\n        newOlLayer = this.create_geojson_layer(newLayer as VectorLayer);\n        break;\n      case KmlLayertype:\n        newOlLayer = this.create_kml_layer(newLayer as VectorLayer);\n        break;\n      case WfsLayertype:\n        newOlLayer = this.create_wfs_layer(newLayer as VectorLayer);\n        break;\n      case CustomLayertype:\n        newOlLayer = this.create_custom_layer(newLayer as CustomLayer);\n        break;\n      case StackedLayertype:\n        newOlLayer = this.create_stacked_layer(newLayer as StackedLayer);\n        break;\n    }\n    return newOlLayer;\n  }\n\n  /**\n   * create layeroptions olLayerOptions<OptionSources> & ILayerOptions\n   * - id\n   * - name\n   * - filtertype\n   * - type\n   * - legendImg\n   * - visible\n   * - zIndex\n   * - opacity\n   * - attribution\n   * - continuousWorld\n   * - set crossOrigin for popup layers\n   * - set source on layeroptions\n   * - popup\n   * - maxResolution/minResolution\n   * - maxZoom/minZoom\n   * - bbox\n   */\n  private createOlLayerOptions(l: Layer, type: Layer['type'], source?: olSource) {\n    if (source) {\n      if (l.attribution) {\n        source.setAttributions([l.attribution]);\n      }\n\n      if (l.continuousWorld) {\n        /**\n         * set wrapX after source creation is not possible so we have to use the private property\n         * https://github.com/openlayers/openlayers/blob/v6.13.0/src/ol/source/Source.js#L48\n         */\n        // tslint:disable-next-line: no-string-literal\n        source['wrapX_'] = l.continuousWorld;\n      }\n\n      /** set crossOrigin for popup layers  */\n      if (l.popup && !l.crossOrigin && l.crossOrigin !== null) {\n        this.sourceSetCross(source);\n      }\n      if (l.crossOrigin || l.crossOrigin === null) {\n        this.sourceSetCross(source);\n      }\n    }\n\n    // ------------------------------------------\n    const layeroptions: olLayerOptions<LayerOptionsSources> & ILayerOptions = {\n      // className - if\n      opacity: l.opacity || 1,\n      visible: l.visible,\n      // extent - if\n      zIndex: 1,\n      // minResolution - if\n      // maxResolution - if\n      // minZoom - if\n      // maxZoom - if\n      // source - if\n      // map - not set\n      // render - not set\n      // properties - not set\n      id: l.id,\n      name: l.name,\n      filtertype: l.filtertype,\n      type,\n      legendImg: l.legendImg\n    };\n\n    if (source) {\n      layeroptions.source = source;\n    }\n\n    if (l.popup) {\n      layeroptions.popup = l.popup;\n      /**\n       * ol 6.x problem if popup (map.forEachLayerAtPixel) use className\n       * https://github.com/openlayers/openlayers/releases/tag/v6.0.0\n       */\n      layeroptions.className = l.id;\n    }\n\n    if (l.maxResolution) {\n      layeroptions.maxResolution = l.maxResolution;\n    }\n    if (l.minResolution) {\n      layeroptions.minResolution = l.minResolution;\n    }\n\n    if (l.maxZoom) {\n      layeroptions.maxZoom = l.maxZoom;\n    }\n    if (l.minZoom) {\n      layeroptions.minZoom = l.minZoom;\n    }\n\n    if (l.bbox) {\n      layeroptions.extent = transformExtent(l.bbox.slice(0, 4) as [number, number, number, number], WGS84, this.getProjection().getCode());\n    }\n\n    return layeroptions;\n  }\n\n  /**\n   * define layer types\n   */\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Tile-TileLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_XYZ-XYZ.html\n   */\n  private create_xyz_layer(l: RasterLayer): olTileLayer<olTileSource> {\n    const xyzOptions: olXYZOptions = {\n      wrapX: false\n    };\n\n    if (l.crossOrigin) {\n      xyzOptions.crossOrigin = l.crossOrigin;\n    }\n\n    const olsource = new olXYZ(xyzOptions);\n\n    const layeroptions = this.createOlLayerOptions(l, 'xyz', olsource);\n\n    const baseTileLayerOptions: olBaseTileLayerOptions<olTileSource> = {\n      preload: 0,\n      useInterimTilesOnError: true\n    };\n    const newlayer = new olTileLayer(Object.assign(layeroptions, baseTileLayerOptions));\n    this.setSubdomains(l, newlayer);\n    this.setCrossOrigin(l, newlayer);\n    this.addEventsToLayer(l, newlayer, olsource);\n    return newlayer;\n  }\n\n\n  /**\n   * create_xyz_layer for Raster\n   *\n   * or\n   *\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_VectorTile-VectorTileLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_VectorTile-VectorTile.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_format_MVT-MVT.html\n   */\n  private create_tms_layer<T extends RasterLayer | VectorLayer>(l: T): tmsReturnType<T> {\n    let newlayer = null;\n    if (l instanceof RasterLayer) {\n      newlayer = this.create_xyz_layer(l);\n      newlayer.set('type', 'tms');\n      return newlayer;\n\n    } else if (l instanceof VectorLayer) {\n      const olsource = new olVectorTileSource({\n        format: new olMVT(),\n        tileGrid: createXYZ({ minZoom: l.minZoom || undefined, maxZoom: l.maxZoom || undefined }),\n        url: l.url,\n        wrapX: false\n      });\n\n      const layeroptions = this.createOlLayerOptions(l, 'tms', olsource);\n\n      const vectorTileLayerOptions: olVectorTileLayerOptions = {\n        declutter: true,\n        renderMode: 'hybrid'\n      };\n\n      newlayer = new olVectorTileLayer(Object.assign(layeroptions, vectorTileLayerOptions));\n      this.setSubdomains(l, newlayer);\n      this.setCrossOrigin(l, newlayer);\n      this.addEventsToLayer(l, newlayer, olsource);\n\n      const style = l?.options?.style;\n      const mapboxSourceKey = l?.options?.styleSource;\n      if (style && mapboxSourceKey) {\n        applyStyle(newlayer, style, mapboxSourceKey);\n      }\n\n      return newlayer;\n    }\n  }\n\n  private create_wms_layer(l: WmsLayer) {\n    let newlayer: olTileLayer<olTileSource> | olImageLayer<olImageSource>;\n    if (l.params?.TILED === 'true' || l.params?.TILED === undefined || l.params?.TILED === null) {\n      newlayer = this.create_tiled_wms_layer(l);\n    } else if (l.params?.TILED === 'false') {\n      newlayer = this.create_image_wms_layer(l);\n    }\n    return newlayer;\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Tile-TileLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_TileWMS-TileWMS.html\n   */\n  private create_tiled_wms_layer(l: WmsLayer): olTileLayer<olTileSource> {\n    const tileOptions: olTileWMSOptions = {\n      /** use assign here otherwise params is passed by object reference to the openlayers layer! */\n      params: Object.assign({}, this.keysToUppercase(l.params)), // params: {} = { ...l.params } ~ same as assign destructuring\n      wrapX: false\n    };\n\n    if (l.tileSize) {\n      tileOptions['tileGrid'] = this.getTileGrid<olTileGrid>('default', null, l.tileSize);\n      delete tileOptions.params['tileSize'];\n    }\n\n    if (l.crossOrigin) {\n      tileOptions.crossOrigin = l.crossOrigin;\n    }\n    const olsource = new olTileWMS(tileOptions);\n    const baseTileLayerOptions: olBaseTileLayerOptions<olTileSource> = {\n      preload: 0,\n      useInterimTilesOnError: true\n    };\n\n    const layeroptions = this.createOlLayerOptions(l, 'wms', olsource);\n    const newlayer = new olTileLayer(Object.assign(layeroptions, baseTileLayerOptions));\n    this.setSubdomains(l, newlayer);\n    this.addEventsToLayer(l, newlayer, olsource);\n    return newlayer;\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Image-ImageLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_ImageWMS-ImageWMS.html\n   */\n  private create_image_wms_layer(l: WmsLayer): olImageLayer<olImageSource> {\n    const options: olImageWMSOptions = {\n      /**\n       * use assign here otherwise params is passed by object reference to the openlayers layer!\n       * https://thecodebarbarian.com/object-assign-vs-object-spread.html\n       */\n      params: Object.assign({}, this.keysToUppercase(l.params)), // params: {} = { ...l.params } ~ same as assign destructuring\n      url: l.url\n    };\n    const olsource = new olImageWMS(options);\n    const layeroptions = this.createOlLayerOptions(l, 'wms', olsource);\n    const baseImageLayerOptions: olBaseImageLayerOptions<olImageSource> = {\n\n    };\n    const newlayer = new olImageLayer(Object.assign(layeroptions, baseImageLayerOptions));\n    this.addEventsToLayer(l, newlayer, olsource);\n    return newlayer;\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Tile-TileLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_WMTS-WMTS.html\n   */\n  private create_wmts_layer(l: WmtsLayer): olTileLayer<olTileSource> {\n    if (l instanceof WmtsLayer) {\n\n      let tileGrid = this.getTileGrid<olWMTSTileGrid>('wmts');\n      let matrixSet = this.EPSG;\n      if (l.params.matrixSetOptions) {\n        matrixSet = l.params.matrixSetOptions.matrixSet;\n        if ('resolutions' in l.params.matrixSetOptions) {\n          const resolutions: Array<string | number> = l.params.matrixSetOptions.resolutions;\n          tileGrid = this.getTileGrid<olWMTSTileGrid>('wmts', null, l.tileSize, null, resolutions);\n        } else if ('resolutionLevels' in l.params.matrixSetOptions || 'tileMatrixPrefix' in l.params.matrixSetOptions) { /** ISimpleMatrixSet */\n          const resolutionLevels = l.params.matrixSetOptions.resolutionLevels;\n          const tileMatrixPrefix = l.params.matrixSetOptions.tileMatrixPrefix;\n          tileGrid = this.getTileGrid<olWMTSTileGrid>('wmts', resolutionLevels, l.tileSize, tileMatrixPrefix, null);\n        }\n        if ('matrixIds' in l.params.matrixSetOptions) {\n          const matrixIds = l.params.matrixSetOptions.matrixIds;\n          tileGrid = this.getTileGrid<olWMTSTileGrid>('wmts', null, l.tileSize, null, null, matrixIds);\n        }\n      }\n\n      let wmtsOptions: olWMTSOptions = {\n        url: l.url,\n        tileGrid,\n        matrixSet,\n        wrapX: false,\n        layer: l.params.layer,\n        style: l.params.style\n      };\n      wmtsOptions = Object.assign({}, wmtsOptions, l.params);\n\n\n      if (l.crossOrigin) {\n        wmtsOptions.crossOrigin = l.crossOrigin;\n      }\n\n      const olsource = new olWMTS(wmtsOptions);\n      const layeroptions = this.createOlLayerOptions(l, 'wmts', olsource);\n      const baseTileLayerOptions: olBaseTileLayerOptions<olTileSource> = {};\n\n      const newlayer = new olTileLayer(Object.assign(layeroptions, baseTileLayerOptions));\n      this.setSubdomains(l, newlayer);\n      this.setCrossOrigin(l, newlayer);\n      this.addEventsToLayer(l, newlayer, olsource);\n      return newlayer;\n    } else {\n      const layer = l as Layer;\n      console.error(`layer with id: ${layer.id} and type ${layer.type} is no instanceof WmtsLayer!`);\n    }\n  }\n\n  /**\n   * check projects/demo-maps/src/app/route-components/route-example-olperformance/services/largelayers.service.ts\n   * for WFS examples.\n   *\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Vector-VectorLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_Vector-VectorSource.html\n   */\n  private create_wfs_layer(l: VectorLayer): olVectorLayer<olVectorSource<olGeometry>> {\n    let url = null;\n    if (l.url.indexOf('http://') === 0 || l.url.indexOf('https://') === 0) {\n      url = new URL(l.url);\n    } else {\n      url = new URL(l.url, window.location.origin);\n    }\n\n    // making sure that srsname is set to current projection\n    url.searchParams.set('srsname', this.EPSG);\n    // note that we don't need to adjust the bbox. contrary to wms'es, in a wfs,\n    // a bbox may use another projection than the srsname.\n\n    const olsource = new olVectorSource({\n      format: new olGeoJSON(),\n      url: url.toString()\n    });\n\n    const layeroptions = this.createOlLayerOptions(l, 'wfs', olsource);\n    const baseVectorLayerOptions: olBaseVectorLayerOptions<olVectorSource<olGeometry>> = {};\n\n    if (l.options) {\n      // here Object.assign modifies the target object - style... is included\n      Object.assign(baseVectorLayerOptions, l.options);\n    }\n\n    const newlayer = new olVectorLayer(Object.assign(layeroptions, baseVectorLayerOptions));\n    if (l.cluster) {\n      this.setCluster(l, newlayer, olsource, {});\n    }\n    this.setSubdomains(l, newlayer);\n    this.setCrossOrigin(l, newlayer);\n    this.addEventsToLayer(l, newlayer, olsource);\n    return newlayer;\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Vector-VectorLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_Vector-VectorSource.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_format_GeoJSON-GeoJSON.html\n   */\n  private create_geojson_layer(l: VectorLayer) {\n    let olsource: olVectorSource;\n    if (l.data) {\n      olsource = new olVectorSource({\n        features: this.geoJsonToFeatures(l.data),\n        format: new olGeoJSON(),\n        wrapX: false\n      });\n    } else if (l.url) {\n      olsource = new olVectorSource({\n        url: l.url,\n        format: new olGeoJSON({\n          dataProjection: WGS84,\n          featureProjection: this.EPSG\n        }),\n        wrapX: false\n      });\n    }\n\n    const layeroptions = this.createOlLayerOptions(l, 'geojson', olsource);\n\n    const baseVectorLayerOptions: olBaseVectorLayerOptions<olVectorSource<olGeometry>> = {};\n    if (l.options) {\n      // here Object.assign modifies the target object - style... is included\n      Object.assign(baseVectorLayerOptions, l.options);\n    }\n\n    const newlayer = new olVectorLayer(Object.assign(layeroptions, baseVectorLayerOptions));\n    if (l.cluster) {\n      this.setCluster(l, newlayer, olsource, {});\n    }\n    this.setCrossOrigin(l, newlayer);\n    this.addEventsToLayer(l, newlayer, olsource);\n    return newlayer;\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Vector-VectorLayer.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_source_Vector-VectorSource.html\n   * https://openlayers.org/en/latest/apidoc/module-ol_format_KML-KML.html\n   */\n  private create_kml_layer(l: VectorLayer) {\n    let olsource: olVectorSource;\n    if (l.data) {\n      olsource = new olVectorSource({\n        features: new olKML({ extractStyles: true }).readFeatures(l.data, {\n          dataProjection: WGS84,\n          featureProjection: this.EPSG\n        }),\n        format: new olKML(),\n        wrapX: false\n      });\n    } else if (l.url) {\n      olsource = new olVectorSource({\n        url: l.url,\n        format: new olKML({\n          extractStyles: true,\n          crossOrigin: (l.crossOrigin && l.crossOrigin === null) ? l.crossOrigin : 'anonymous',\n        }),\n        wrapX: false\n      });\n    }\n\n    const layeroptions = this.createOlLayerOptions(l, 'kml', olsource);\n\n    const baseVectorLayerOptions: olBaseVectorLayerOptions<olVectorSource<olGeometry>> = {};\n    if (l.options) {\n      // here Object.assign modifies the target object - style... is included\n      Object.assign(baseVectorLayerOptions, l.options);\n    }\n\n    const newlayer = new olVectorLayer(Object.assign(layeroptions, baseVectorLayerOptions));\n    if (l.cluster) {\n      this.setCluster(l, newlayer, olsource, {});\n    }\n    this.setCrossOrigin(l, newlayer);\n    this.addEventsToLayer(l, newlayer, layeroptions.source);\n    return newlayer;\n  }\n\n  /** bug fix: https://github.com/openlayers/openlayers/issues/10099 */\n  private setCrossOrigin(l: Layer, layer: olLayer<olSource>): void {\n    if (layer instanceof olLayer) {\n      const olsource = layer.getSource();\n      /** set crossOrigin for popup layers  */\n      if (l.popup && !l.crossOrigin && l.crossOrigin !== null) {\n        this.sourceSetCross(olsource);\n      }\n\n      if (l.crossOrigin || l.crossOrigin === null) {\n        this.sourceSetCross(olsource);\n      }\n    }\n  }\n\n  /**\n   * set cluster source and style for point layers\n   */\n  private setCluster(l: VectorLayer, layer: olVectorLayer<olVectorSource>, source: olVectorSource, styleCache: { [key: string]: any }): void {\n    if (l.cluster) {\n      const clusteroptions: olClusterOptions = {};\n      if (typeof l.cluster === 'object') {\n        // here Object.assign modifies the target object\n        Object.assign(clusteroptions, l.cluster);\n      }\n      clusteroptions.source = source;\n      const clusterSource = new olCluster(clusteroptions);\n      // layeroptions.source = clusterSource;\n      layer.setSource(clusterSource);\n      layer.setStyle((feature) => {\n        const size = feature.get('features').length;\n        let style = styleCache[size];\n        if (!style) {\n          style = new olStyle({\n            image: new olCircleStyle({\n              radius: 10,\n              stroke: new olStroke({\n                color: '#fff'\n              }),\n              fill: new olFill({\n                color: '#3399CC'\n              })\n            }),\n            text: new olText({\n              text: size.toString(),\n              fill: new olFill({\n                color: '#fff'\n              })\n            })\n          });\n          styleCache[size] = style;\n        }\n        return style;\n      });\n    }\n  }\n\n  /** use subdomains to setUrl/s on source */\n  private setSubdomains(l: Layer, layer: olLayer<olSource>): void {\n    if (l instanceof VectorLayer || l instanceof RasterLayer) {\n      const source = layer.getSource() as olXYZ | olVectorTile | olTileWMS | olWMTS | olVectorSource<olGeometry>;\n      if (l.subdomains) {\n        if (l.type === 'wfs' && (source instanceof olVectorSource)) {\n          l.url = l.url.replace('{s}', `${l.subdomains[0]}-${l.subdomains[l.subdomains.length - 1]}`);\n          source.setUrl(l.url);\n        } else if (!(source instanceof olVectorSource)) {\n          const urls = l.subdomains.map((item) => l.url.replace('{s}', `${item}`));\n          source.setUrls(urls);\n        }\n      } else {\n        source.setUrl(l.url);\n      }\n    }\n  }\n\n  private sourceSetCross(source: olSource): void {\n    /**\n     * https://github.com/search?q=crossOrigin+repo%3Aopenlayers%2Fopenlayers+path%3Asrc%2Fol%2Fsource%2F&type=Code&ref=advsearch&l=&l=\n     */\n    if (source instanceof olImageSource || source instanceof olTileImageSource || source instanceof olTileSource) {\n      source['crossOrigin'] = 'anonymous';\n      source['crossOrigin_'] = 'anonymous';\n    }\n  }\n\n  /**\n   * Use this Layer to add a not supported OpenLayers layer\n   *\n   * custom_layer: olBaseLayer\n   */\n  private create_custom_layer(l: CustomLayer<olBaseLayer>) {\n    if (l.custom_layer) {\n      const layer = l.custom_layer;\n\n      if (layer instanceof olLayer) {\n        const olsource = layer.getSource() as olSource;\n        if (l.attribution) {\n          olsource.setAttributions([l.attribution]);\n        }\n\n        if (l.continuousWorld) {\n          /**\n           * set wrapX after source creation is not possible so we have to use the private property\n           * It works based on a test in codesandbox.io\n           * https://github.com/openlayers/openlayers/blob/v6.13.0/src/ol/source/Source.js#L48\n           */\n          // tslint:disable-next-line: no-string-literal\n          olsource['wrapX_'] = l.continuousWorld;\n        } else {\n          // tslint:disable-next-line: no-string-literal\n          olsource['wrapX_'] = false;\n        }\n        this.setCrossOrigin(l, layer);\n        this.addEventsToLayer(l, layer, olsource);\n\n        // https://github.com/dlr-eoc/ukis-frontend-libraries/issues/100\n        if (olsource instanceof olRasterSource) {\n          layer.on('change:source', (evt) => {\n            evt.oldValue.dispose();\n          });\n        }\n      } else if (layer instanceof olLayerGroup) {\n        layer.getLayers().forEach(gl => {\n          const layerId = `${l.id}_${olGetUid(gl)}`;\n          if (!gl.get('id')) {\n            gl.set('id', layerId);\n          }\n          if (gl instanceof olLayer) {\n            this.setCrossOrigin(l, gl);\n            this.addEventsToLayer(l, gl, gl.getSource());\n          }\n          /**\n           * groups are flattened in map.forEachLayerAtPixel so add popup to each layer\n           * popup will be shown for top layer in the Group if there is a pixel color\n           */\n          if (l.popup && !gl.get('popup')) {\n            gl.set('popup', l.popup);\n            /** set className if not default ol-layer */\n            if (gl.getClassName() === 'ol-layer') {\n              gl['className_'] = layerId;\n            }\n          }\n        });\n      } else {\n        console.error(`The custom_layer of ${l.id} in not a openlayers Layer`);\n      }\n\n      if (l.maxResolution) {\n        layer.setMaxResolution(l.maxResolution);\n      }\n      if (l.minResolution) {\n        layer.setMinResolution(l.minResolution);\n      }\n\n      if (l.maxZoom) {\n        layer.setMaxZoom(l.maxZoom);\n      }\n      if (l.minZoom) {\n        layer.setMinZoom(l.minZoom);\n      }\n\n      const layeroptions: ILayerOptions & olLayerOptions<LayerOptionsSources> = {\n        type: 'custom',\n        name: l.name,\n        id: l.id,\n        visible: l.visible,\n        legendImg: l.legendImg,\n        opacity: l.opacity || 1,\n        zIndex: 1,\n      };\n\n      if (l.popup && !(layer instanceof olLayerGroup)) {\n        layeroptions.popup = l.popup;\n        /**\n         * ol 6.x problem if popup (map.forEachLayerAtPixel) use className\n         * needs the class Name to detect if it is a different layer at the pixel value\n         * https://github.com/openlayers/openlayers/releases/tag/v6.0.0\n         */\n        // tslint:disable-next-line: no-string-literal\n        layer['className_'] = l.id;\n      }\n\n      if (l.bbox) {\n        const extent = transformExtent(l.bbox.slice(0, 4) as [number, number, number, number], WGS84, this.getProjection().getCode());\n        layer.setExtent(extent);\n      }\n\n      layer.setProperties(layeroptions);\n      // don't delete the custom Layer, it is used to newly create all layers from layerservice after map all layers removed!\n      // delete l.custom_layer;\n      return layer;\n\n    } else {\n      console.log('attribute custom_layer not set on layer type custom!', l);\n    }\n  }\n\n  /**\n   * Use this Layer to stack multiple ukis layers in one.\n   * creates a olLayerGroup from create_layers\n   */\n  private create_stacked_layer(l: StackedLayer) {\n    if (l instanceof StackedLayer) {\n      const layers = l.layers.map(ml => {\n        /** Set all to visible because the visibility of merge layers cannot be controlled later */\n        ml.visible = true;\n        /** popups are get from the olLayer later so add them */\n        ml.popup = l.popup;\n        /** events are get from the olLayer later so add them */\n        ml.events = l.events;\n        return this.create_layers(ml);\n      });\n\n      const baseLayerOptions = this.createOlLayerOptions(l, 'custom');\n      const groupOptions: olLayerGroupOptions = {\n        layers\n      };\n\n      const layerGroup = new olLayerGroup(Object.assign(baseLayerOptions, groupOptions));\n      return layerGroup;\n    } else {\n      console.log('layer is not of type StackedLayer!', l);\n    }\n  }\n\n  private resolutionsFromExtent(extent, optMaxZoom: number, tileSize: number) {\n    const maxZoom = optMaxZoom;\n\n    const height = olGetHeight(extent);\n    const width = olGetWidth(extent);\n\n    const maxResolution = Math.max(width / tileSize, height / tileSize);\n\n    const length = maxZoom + 1;\n    const resolutions = new Array(length);\n    for (let z = 0; z < length; ++z) {\n      resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n  }\n\n  private matrixIdsFromResolutions(resolutionLevels: number, matrixIdPrefix?: string) {\n    return Array.from(Array(resolutionLevels).keys()).map(l => {\n      if (matrixIdPrefix) {\n        return `${matrixIdPrefix}:${l}`;\n      } else {\n        return l;\n      }\n    });\n  }\n\n  public getTileGrid<T>(type: 'wmts' | 'default' = 'default', resolutionLevels?: number, tileSize?: number, matrixIdPrefix?: string, resolutions?: Array<string | number>, matrixIds?: Array<string | number>): T {\n    const newResolutionLevels = resolutionLevels || DEFAULT_MAX_ZOOM;\n    const newTileSize = tileSize || DEFAULT_TILE_SIZE;\n    const newMatrixIdPrefix = matrixIdPrefix || '';\n\n    const projectionExtent = this.getProjection().getExtent();\n    const defaultResolutions = this.resolutionsFromExtent(projectionExtent, newResolutionLevels, newTileSize);\n    const defaultMatrixIds = this.matrixIdsFromResolutions(defaultResolutions.length, newMatrixIdPrefix);\n    /** how to generate matrix ids is not in the wms GetCapabilities ?? */\n\n    const tileGridOptions: any = {\n      extent: projectionExtent,\n      origin: olGetTopLeft(projectionExtent),\n      resolutions: resolutions || defaultResolutions,\n      tileSize: [newTileSize, newTileSize]\n    };\n\n    if (type === 'wmts') {\n      tileGridOptions.matrixIds = matrixIds || defaultMatrixIds;\n      const grid = new olWMTSTileGrid(tileGridOptions);\n      return grid as unknown as T;\n    } else if (type === 'default') {\n      const grid = new olTileGrid(tileGridOptions);\n      return grid as unknown as T;\n    }\n  }\n\n  private isPopupObj(layerpopup: Layer['popup'] | string): layerpopup is popup {\n    return (layerpopup && typeof layerpopup === 'object') && !Array.isArray(layerpopup);\n  }\n\n  private isPopupObjMove(layerpopup: Layer['popup']): layerpopup is popup {\n    return (this.isPopupObj(layerpopup) && layerpopup.event === 'move');\n  }\n\n  private isPopupObjClick(layerpopup: Layer['popup']): layerpopup is popup {\n    return (this.isPopupObj(layerpopup) && layerpopup.event === 'click');\n  }\n\n  private isPopupObjArray(layerpopup: Layer['popup']): layerpopup is popup[] {\n    return Array.isArray(layerpopup) && layerpopup.length && this.isPopupObj(layerpopup[0]);\n  }\n\n  private isPopupStringArray(layerpopup: Layer['popup']): layerpopup is string[] {\n    return Array.isArray(layerpopup) && layerpopup.length && typeof layerpopup[0] === 'string';\n  }\n\n  private eventIsBrowserEvent(popupEvt: popup['event'], evt: olMapBrowserEvent<PointerEvent>) {\n    if (popupEvt === 'move' && evt.type === 'pointermove') {\n      return true;\n    } else if (popupEvt === 'click' && evt.type === 'click') {\n      return true;\n    }\n  }\n\n\n\n  /** USED in map-ol.component */\n  /**\n   * TODO:\n   * - check the pointer event\n   * - on move event set cursor -> depends on which kind of layer??\n   *   layers with features and only color pixel\n   *\n   * - forEachFeatureAtPixel: Detect features that intersect a pixel on the viewport\n   *   Vector Layers???\n   *\n   * - forEachLayerAtPixel: Detect layers that have a color value at a pixel on the viewport (false positives unless the map layers have had different className)\n   *   Raster Layers???\n   */\n\n  /**\n   *  layers_on_click() and layers_on_pointermove() should be removed\n   *  this filtering must be done later\n   *\n   *  1. on a Map event Filter if map has layers on the pixel\n   *  forEachLayerAtPixel: Detect layers that have a color value at a pixel on the viewport (false positives unless the map layers have had different className)\n   *  check layer source crossOrigin = anonymous\n   *\n   *  2. Filter if it is the top visible layer - so no popups are shown for layers beneath https://github.com/dlr-eoc/ukis-frontend-libraries/issues/94#issuecomment-916759628\n   *  3. check if the top visible layer has a popup property\n   *  4. For this Layer change the cursor on forEachLayerAtPixel -> hit\n   *\n   *  5. Differentiate between raster and vector to get features or layer.color for the properties passed to the popup\n   *  For Features change the cursor on forEachFeatureAtPixel -> hit\n   *\n   *  6. limit properties if popup property is: Array<string> | popup | popup[] -> popup?.filterkeys\n   *  7. overwrite properties if popup property is: popup | popup[]\n   *  8. check for popupFunction, asyncPopup and dynamicPopup\n   *  9. use addPopup() or addPopupObj()\n   *\n   *  10. check popup event and if move popup exists => reuse old popup\n   *  11. remove move popups if different event or !popup.event\n   *  12. create new popup if not 10. or 11.\n   *  13. prepare ol overlayoptions\n   *  14. remove DynamicPopup if exists\n   *  15. createPopupContainer\n   *  16. set ol overlay addEvent and type = popup\n   *  17. get coordinate from geometry or map.event\n   *  18. set Position and map.addOverlay(overlay) if popup not exists\n   */\n  public layersOnMapEvent(evt: olMapBrowserEvent<PointerEvent>) {\n    let layerHit = false;\n\n\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and execute a callback with each matching layer.\n     * Layers included in the detection can be configured through opt_layerFilter.\n     *\n     * Note: this may give false positives unless the map layers have had different *className* properties assigned to them.\n     * Also there could be cross-origin data, so set crossOrigin: 'anonymous' for layers where you want get pixel data!!\n     */\n    const item = this.map.forEachLayerAtPixel(evt.pixel, (layer, color) => {\n      /**\n       * return to stop detection and use the top (first detected) layer\n       * This is faster than pushing the layers into an array and iterate over it.\n       * And normally the user is only interested in the top Layer. If it is still necessary to detect several layers at the same time, then use a new function for map.on()\n       */\n      return { layer, color };\n    }, {\n      layerFilter: this.filterLayerNoPopup\n    });\n    if (item) {\n      /**\n       * only show for top layer and if top layer has popup\n       */\n      const hasPopup: Layer['popup'] = (item.layer.get('popup'));\n      if (hasPopup) {\n        /** check if cursor was set (we need this only on move?) */\n        this.hitLayerCurr = item.layer.get('id');\n        if (!this.hitLayerPrev) {\n          this.hitLayerPrev = this.hitLayerCurr;\n        }\n\n        /** set cursor for Layers with a color value */\n        if (item.color) {\n          layerHit = true;\n        }\n\n        /** remove cursor and move-popups on layer change */\n        if (this.hitLayerPrev && this.hitLayerPrev !== this.hitLayerCurr) {\n          layerHit = false;\n          this.hitLayerPrev = this.hitLayerCurr;\n        }\n        const useEvent = this.topLayerCheckEvent(evt, hasPopup);\n        if (useEvent) {\n          this.layerOnEvent(evt, item.layer, item.color);\n        }\n      }\n    }\n\n    if (layerHit) {\n      this.map.getTargetElement().style.cursor = 'pointer';\n    } else {\n      this.removeAllPopups((item) => {\n        return item.get('addEvent') === 'pointermove';\n      });\n      this.map.getTargetElement().style.cursor = '';\n    }\n  }\n\n  /**\n   * To filtered out layers and show the popup beneath e.g. text overlays\n   * in map.forEachLayerAtPixel for raster and map.forEachFeatureAtPixel for vector\n   */\n  private filterLayerNoPopup = (l: olLayer<olSource>) => {\n    const popup: Layer['popup'] = (l.get('popup'));\n    let shouldNotFilterLayer = true;\n    if (popup && this.isPopupObj(popup)) {\n      if (popup.filterLayer === true) {\n        shouldNotFilterLayer = false;\n      }\n    }\n    return shouldNotFilterLayer;\n  }\n\n  private topLayerCheckEvent(evt: olMapBrowserEvent<PointerEvent>, popup: Layer['popup']) {\n    let useEvent: 'click' | 'move' = null;\n    const clickOrMove = (evt: olMapBrowserEvent<PointerEvent>, popup: popup) => {\n      if (popup.event) {\n        if (this.eventIsBrowserEvent(popup.event, evt) && this.isPopupObjClick(popup)) {\n          useEvent = 'click';\n        } else if (this.eventIsBrowserEvent(popup.event, evt) && this.isPopupObjMove(popup)) {\n          useEvent = 'move';\n        }\n      } else {\n        /** only show popups without an event for browser click  */\n        if (evt.type === 'click') {\n          useEvent = 'click';\n        }\n      }\n    }\n    // check event is browser event\n    if (typeof popup === 'boolean') {\n      if (popup === true) {\n        /** only show popups without an event for browser click  */\n        if (evt.type === 'click') {\n          useEvent = 'click';\n        }\n      }\n    } else if (this.isPopupStringArray(popup)) {\n      /** only show popups without an event for browser click  */\n      if (evt.type === 'click') {\n        useEvent = 'click';\n      }\n    } else {\n      /** popup is  popup | popup[] */\n      if (this.isPopupObjArray(popup)) {\n        popup.map(p => {\n          clickOrMove(evt, p);\n        });\n      } else {\n        clickOrMove(evt, popup);\n      }\n    }\n\n    return useEvent;\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Layer-Layer.html#Subclasses\n   */\n  private checkIsRaster(layer: olLayer<any>): layer is olBaseImageLayer<olImageSource, CanvasImageLayerRenderer> | olBaseTileLayer<olTileSource, CanvasTileLayerRenderer> {\n    if (layer instanceof olBaseImageLayer || layer instanceof olBaseTileLayer) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Layer-Layer.html#Subclasses\n   */\n  private checkIsVector(layer: olLayer<any>): layer is olBaseVectorLayer<olVectorSource<any>, CanvasVectorLayerRenderer> {\n    if (layer instanceof olBaseVectorLayer && !this.checkIsRaster(layer)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public layerOnEvent(evt: olMapBrowserEvent<PointerEvent>, layer: olLayer<any>, color?: Uint8ClampedArray | Uint8Array) {\n    if (this.checkIsRaster(layer)) {\n      this.rasterOnEvent(evt, layer, color);\n    } else if (this.checkIsVector(layer)) {\n      this.vectorOnEvent(evt);\n    }\n  }\n\n  public vectorOnEvent(evt: olMapBrowserEvent<PointerEvent>) {\n    let featureHit = false;\n    const item = this.map.forEachFeatureAtPixel(evt.pixel, (feature, layer) => {\n      /** set cursor for features with a color value */\n      featureHit = true;\n\n      /**\n       * return to stop detection and use the top (first detected) feature\n       * This is faster than pushing the feature into an array and iterate over it.\n       */\n      return { feature, layer };\n    }, {\n      layerFilter: (layer) => {\n        let shouldNotFilterLayer = true;\n        if (layer instanceof olBaseVectorLayer) {\n          const olSource: olCluster | olVectorSource<any> | olVectorTile = layer.getSource();\n          if (olSource instanceof olCluster) {\n            shouldNotFilterLayer = (olSource as any).getSource() instanceof olVectorSource;\n          } else {\n            shouldNotFilterLayer = olSource instanceof olVectorSource || olSource instanceof olVectorTile;\n          }\n        }\n\n        const filter = this.filterLayerNoPopup(layer);\n        if (filter === false) {\n          shouldNotFilterLayer = false;\n        }\n\n        /** fix for https://github.com/openlayers/openlayers/issues/12886 */\n        const layerExtent = layer.getExtent();\n        if (layerExtent) {\n          const pixelCoordinate = this.map.getCoordinateFromPixel(evt.pixel);\n          if (!olContainsCoordinate(layerExtent, pixelCoordinate)) {\n            shouldNotFilterLayer = false;\n          }\n        }\n\n        return shouldNotFilterLayer;\n      },\n      hitTolerance: this.hitTolerance\n    });\n\n    if (item) {\n      /**\n       * only show for top feature and if top layer has popup\n       */\n      const hasPopup: Layer['popup'] = (item.layer.get('popup'));\n      if (hasPopup) {\n        const layer = item.layer;\n        const feature = item.feature;\n\n        let properties: any = {};\n\n        const childFeatures = feature.getProperties().features;\n        if (childFeatures && childFeatures.length === 1) {\n          const childFeature = childFeatures[0];\n          properties = childFeature.getProperties();\n        } else if (childFeatures && childFeatures.length > 1) {\n          /**\n           * zoom to cluster on click\n           * or check for layerpopup.event !== move\n           */\n          if (evt.type === 'click') {\n            const extent = this.getFeaturesExtent(feature.getProperties().features);\n            this.setExtent(extent);\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          // type no cluster\n          properties = feature.getProperties();\n        }\n        this.prepareAddPopup(properties, layer, feature, evt, hasPopup);\n      }\n    }\n\n    if (featureHit) {\n      this.map.getTargetElement().style.cursor = 'pointer';\n    } else {\n      this.map.getTargetElement().style.cursor = '';\n    }\n  }\n\n  public rasterOnEvent(evt: olMapBrowserEvent<PointerEvent>, layer: olLayer<any>, color?: Uint8ClampedArray | Uint8Array) {\n    const layerpopup: Layer['popup'] = layer.get('popup');\n    let properties: any = {};\n\n    if (layerpopup) {\n      properties = layer.getProperties();\n      properties.evt = evt;\n      if (color) {\n        properties.color = color;\n      }\n\n      this.prepareAddPopup(properties, layer, null, evt, layerpopup);\n    }\n  }\n\n  private prepareAddPopup(layerProperties: any, layer: olLayer<any>, feature: olFeature<any> | olRenderFeature, evt: olMapBrowserEvent<PointerEvent>, layerpopup: Layer['popup']) {\n    const args: IPopupArgs = {\n      modelName: layerProperties.id,\n      properties: layerProperties,\n      layer,\n      feature,\n      event: evt\n    };\n\n    let popupProperties = Object.assign({}, layerProperties);\n    if (popupProperties.geometry) {\n      delete popupProperties.geometry;\n    }\n\n    const limitPopupObjProperties = (popupObj: popup) => {\n      if (popupObj && popupObj.filterkeys) {\n        popupProperties = Object.keys(popupProperties)\n          .filter(key => popupObj.filterkeys.includes(key))\n          .reduce((obj, key) => {\n            obj[key] = popupProperties[key];\n            return obj;\n          }, {});\n      }\n    }\n\n    /** Popup is array - limit properties */\n    if (this.isPopupStringArray(layerpopup)) {\n      popupProperties = Object.keys(popupProperties)\n        .filter(key => layerpopup.includes(key))\n        .reduce((obj, key) => {\n          obj[key] = popupProperties[key];\n          return obj;\n        }, {});\n    }\n    /** Popup is array of popupObj - limit properties */\n    else if (this.isPopupObjArray(layerpopup)) {\n      // is the first popupObj in the array with the same event as evt.type\n      const popupObj = layerpopup.find(p => this.eventIsBrowserEvent(p.event, evt));\n      limitPopupObjProperties(popupObj);\n    }\n    /** Popup is object - limit properties */\n    else if (this.isPopupObj(layerpopup)) {\n      limitPopupObjProperties(layerpopup);\n    }\n\n\n    const overwritePopup = (popupObj: popup) => {\n      /** overwrite the keys of the layer properties */\n      if (popupObj.properties) {\n        const usedProperties = Object.keys(popupObj.properties);\n        if (Array.isArray(usedProperties)) {\n          popupProperties = Object.keys(popupProperties)\n            /* .filter(key => usedProperties.includes(key)) */\n            .reduce((obj, key) => {\n              const newKey = popupObj.properties[key];\n              if (newKey) {\n                obj[newKey] = popupProperties[key];\n              } else {\n                obj[key] = popupProperties[key];\n              }\n              return obj;\n            }, {});\n        }\n\n\n      }\n    }\n\n    /** overwrite and us popupFunction or dynamicPopup */\n    if (this.isPopupObjArray(layerpopup)) {\n      layerpopup.forEach(p => {\n        if (this.eventIsBrowserEvent(p.event, evt)) {\n          overwritePopup(p);\n        }\n      })\n    } else if (this.isPopupObj(layerpopup)) {\n      overwritePopup(layerpopup);\n    }\n\n    const addPopupObj = (popupObj: popup) => {\n      /** async function where you can paste a html string to the callback */\n      if ('asyncPopup' in popupObj) {\n        popupObj.asyncPopup(popupProperties, (html) => {\n          this.addPopup(args, null, html, popupObj.event, popupObj.single);\n        });\n        /** add event if popup object */\n      } else {\n\n        /** adjust args if popupFunction or dynamicPopup*/\n        if (popupObj.popupFunction) {\n          args.popupFn = popupObj.popupFunction; //This could be done in createPopupContainer()\n        } else if (popupObj.dynamicPopup) {\n          args.dynamicPopup = popupObj.dynamicPopup; // This could be done in createPopupContainer()\n        }\n\n        this.addPopup(args, popupProperties, null, popupObj.event, popupObj.single);\n      }\n    }\n\n    /** popup is boolean or string array */\n    if (typeof layerpopup === 'boolean' || this.isPopupStringArray(layerpopup)) {\n      this.addPopup(args, popupProperties, null);\n    }\n    /** popup array of popupObj */\n    else if (this.isPopupObjArray(layerpopup)) {\n      layerpopup.forEach(p => {\n        // filter that browser event and popup event are the same\n        if (this.eventIsBrowserEvent(p.event, evt)) {\n          addPopupObj(p);\n        }\n      });\n    }\n    /** popup is a popupObj */\n    else if (layerpopup) {\n      addPopupObj(layerpopup);\n    }\n  }\n\n  // TODO: overlapping layers - move popup is added on click ???\n  public addPopup(args: IPopupArgs, popupObj: any, html?: string, event?: 'click' | 'move', removePopups?: boolean) {\n    const layerpopup: Layer['popup'] = args.layer.get('popup');\n    // check if popup is already there and event is move\n    const layerID = args.layer.get('id');\n    const moveID = `popup_move_ID`;\n    const moveKeyLayerFeature = 'move_ID_L_F';\n    const movePopup = this.getPopups().find(item => item.getId() === moveID);\n    const browserEvent = args.event;\n\n    let moveIDlf = null;\n    if (event === 'move') {\n      /** only on raster color is added - see rasterOnEvent()*/\n      if (args.properties?.color) {\n        moveIDlf = `${layerID}:${args.properties?.color.toString()}`;\n      } else {\n        if (args.feature) {\n          moveIDlf = `${layerID}:${olGetUid(args.feature)}`;\n        } else if (args.layer) {\n          moveIDlf = `${layerID}:${olGetUid(args.layer)}`;\n        }\n      }\n    }\n\n    /**\n     * If event move and the map already has a Overlay for move\n     * then only create new html container and set the position\n     */\n    if (event === 'move' && browserEvent.type === 'pointermove' && movePopup) {\n      let coordinate;\n      if (args.properties && args.properties.geometry && args.properties.geometry.getType() === 'Point') {\n        coordinate = args.properties.geometry.getCoordinates();\n      } else {\n        coordinate = browserEvent.coordinate;\n      }\n\n      /** check if layer or feature changes, then only create new container */\n      if (moveIDlf !== movePopup.get(moveKeyLayerFeature)) {\n        const container = this.createPopupContainer(movePopup, args, popupObj, html, event);\n        movePopup.setElement(container);\n      }\n\n      movePopup.setPosition(coordinate);\n      /** update movePopup to be rendered over the previous added popup */\n      movePopup.getElement().parentElement.style.zIndex = '1';\n    } else if (browserEvent.type === 'pointermove' && !event) {\n      /** remove move popup if move on a click layer */\n      if (movePopup) {\n        this.removeAllPopups((item) => {\n          return item.get('addEvent') === 'pointermove';\n        });\n      }\n    } else if (browserEvent.type === 'pointermove' && event === 'click') {\n      if (movePopup) {\n        this.removeAllPopups((item) => {\n          return item.get('addEvent') === 'pointermove';\n        });\n      }\n    } else {\n      let popupID = null;\n      if (event === 'move') {\n        popupID = moveID;\n      } else {\n        if (args.feature) {\n          popupID = `${layerID}:${olGetUid(args.feature)}`;\n        } else if (args.layer) {\n          popupID = `${layerID}:${olGetUid(args.layer)}`;\n        } else {\n          popupID = `${layerID}:popup_${new Date().getTime()}`;\n        }\n      }\n\n      const defaultOptions: olOverlayOptions = {\n        // element: container,\n        autoPan: true,\n        id: popupID,\n        autoPanAnimation: {\n          duration: 250\n        },\n        positioning: OverlayPositioning.BOTTOM_CENTER,\n        stopEvent: true,\n        insertFirst: false,\n      };\n\n      let overlayoptions = defaultOptions;\n\n      /**\n       * Check if popup is an array of popup obj's or a popup obj\n       * then merge the popup?.options with the default ol/overlay options\n       */\n      if (this.isPopupObjArray(layerpopup)) {\n        const objForEvent = layerpopup.find(p => this.eventIsBrowserEvent(p.event, browserEvent));\n        if (objForEvent.options) {\n          overlayoptions = Object.assign(defaultOptions, objForEvent.options);\n        }\n      } else if (this.isPopupObj(layerpopup) && layerpopup.options) {\n        overlayoptions = Object.assign(defaultOptions, layerpopup.options);\n      }\n\n      const overlay = new olOverlay(overlayoptions);\n      if (moveIDlf) {\n        overlay.set(moveKeyLayerFeature, moveIDlf);\n      }\n\n      if (removePopups) {\n        this.removeAllPopups((item) => {\n          // only remove the popups from the current layer\n          const elementID = item.getId();\n          const layer = elementID.toString().split(':')[0];\n          if (layer) {\n            if (layerID === layer) {\n              return layerID === layer;\n            }\n          } else {\n            return true;\n          }\n        });\n      }\n\n      const hasPopup = this.getPopups().find(item => (item.getId() === overlay.getId() && overlay.getId() !== moveID));\n      if (hasPopup) {\n        // removes ol-part of popup\n        this.map.removeOverlay(hasPopup);\n        // removes angular-part of popup\n        this.destroyDynamicPopupComponent(hasPopup.getId().toString());\n      }\n\n      const container = this.createPopupContainer(overlay, args, popupObj, html, event);\n      /** edge case when moving and clicking sometimes the browser event is not like the popup event */\n      if (overlay.getId() === moveID) {\n        overlay.set('addEvent', 'pointermove');\n      } else {\n        overlay.set('addEvent', browserEvent.type);\n      }\n      overlay.set(OVERLAY_TYPE_KEY, 'popup');\n      overlay.setElement(container);\n\n      let coordinate;\n      if (args.properties && args.properties.geometry && args.properties.geometry.getType() === 'Point') {\n        coordinate = args.properties.geometry.getCoordinates();\n      } else {\n        coordinate = browserEvent.coordinate;\n      }\n\n      overlay.setPosition(coordinate);\n\n      /**\n       * edge case prevent add multiple movePopup's\n       * only add a new popup if it's not a movePopup or there isn't a already existing movePopup\n       */\n      if (!(movePopup && event === 'move')) {\n        this.map.addOverlay(overlay);\n      }\n    }\n  }\n\n  private createPopupContainer(overlay: olOverlay, args: IPopupArgs, popupObj: any, html?: string, event?: 'click' | 'move') {\n    const content = document.createElement('div');\n    content.className = 'ol-popup-content';\n    let popupHtml = '';\n    if (args.popupFn) {\n      popupHtml = args.popupFn(popupObj);\n    } else if (html && (!popupObj || Object.keys(popupObj).length === 0)) {\n      popupHtml = html;\n    } else {\n      popupHtml = this.createPopupHtml(popupObj);\n    }\n    content.innerHTML = popupHtml;\n    if (args.dynamicPopup) {\n      // To prevent memory leak:\n      // if this very popup already has been created (for example `popup_move_ID`),\n      // then destroy it before creating a new one.\n      const id = overlay.getId().toString();\n      this.destroyDynamicPopupComponent(id);\n      // Only now create a new one.\n      const dArgs: IDynamicPopupArgs = {\n        event: args.event,\n        layer: args.layer,\n        feature: args.feature || null,\n        dynamicPopup: args.dynamicPopup,\n        properties: popupObj,\n      };\n      this.createDynamicPopupComponent(id, content, dArgs);\n    }\n\n    const container = document.createElement('div');\n    container.className = 'ol-popup';\n    container.id = overlay.getId().toString();\n    container.style.display = 'block';\n\n    if (!event || event !== 'move') {\n      const closer = document.createElement('a');\n      closer.className = 'ol-popup-closer';\n      container.appendChild(closer);\n\n      const closeFunction = () => {\n        closer.removeEventListener('click', closeFunction, false);\n        // removes ol-part of popup\n        this.map.removeOverlay(overlay);\n        // removes angular-part of popup\n        this.destroyDynamicPopupComponent(overlay.getId().toString());\n      };\n      closer.addEventListener('click', closeFunction, false);\n    }\n    container.appendChild(content);\n    return container;\n  }\n\n  /** USED in map-ol.component */\n  public removeAllPopups(filter?: (item: olOverlay) => boolean) {\n    let popups = this.getPopups();\n    if (filter) {\n      popups = this.getPopups().filter(filter);\n    }\n    popups.forEach((overlay) => {\n      if (overlay.get(OVERLAY_TYPE_KEY) === 'popup') {\n        // removes ol-part of popup\n        this.map.removeOverlay(overlay);\n        // removes angular-part of popup\n        this.destroyDynamicPopupComponent(overlay.getId().toString());\n      }\n    });\n  }\n\n  public createPopupHtml(obj: any) {\n    let htmlStr = '<table>';\n    for (const o in obj) {\n      if (obj.hasOwnProperty(o)) {\n        htmlStr += '<tr><td style=\"vertical-align: top; padding-right: 7px;\"><b>' + o + ': </b></td><td>' + obj[o] +\n          '</td></tr>';\n      }\n    }\n    htmlStr = htmlStr + '</table>';\n    return htmlStr;\n  }\n\n  public getPopups(): olOverlay[] {\n    const popups = [];\n    this.map.getOverlays().getArray().slice(0).forEach((overlay) => {\n      if (overlay.get(OVERLAY_TYPE_KEY) === 'popup') {\n        popups.push(overlay);\n      }\n    });\n    return popups;\n  }\n\n  /**\n   * Destroys a popup-component.\n   *  - kills the component (with `.destroy()`)\n   *  - detaches it from angular-application (with `.destroy()`)\n   *  - removes the entry from `this.dynamicPopupComponents`\n   * @param id : The string under which the popup-component has been stored in `this.dynamicPopupComponents`\n   */\n  private destroyDynamicPopupComponent(id: string): void {\n    if (this.dynamicPopupComponents.has(id)) {\n      this.dynamicPopupComponents.get(id).destroy();\n      this.dynamicPopupComponents.delete(id);\n    }\n  }\n\n  /**\n   * Creates an angular component to be used as popup-body.\n   *  - creates component\n   *  - attaches component-view to angular-application\n   *  - keeps reference to component in `this.dynamicPopupComponents` for later removal.\n   *\n   * @param id : The container-id. Also the id under which the component will be stored in `this.dynamicPopupComponents`.\n   * @param anchorElement : The html-element to which the popup-component shall be attached\n   * @param args : Must contain `dynamicPopup`\n   */\n  private createDynamicPopupComponent(id: string, anchorElement: HTMLElement, args: IDynamicPopupArgs): void {\n    const factory = this.crf.resolveComponentFactory(args.dynamicPopup.component);\n    const popupBody = factory.create(this.injector, [], anchorElement);\n\n    if (args.dynamicPopup.getAttributes) {\n      const attributes = args.dynamicPopup.getAttributes(args);\n      for (const key in attributes) {\n        if (attributes[key] !== 'undefined') {\n          popupBody.instance[key] = attributes[key];\n        }\n      }\n    }\n    this.app.attachView(popupBody.hostView);\n    this.dynamicPopupComponents.set(id, popupBody);\n  }\n\n  /**\n   *\n   * @param extent: [minX, minY, maxX, maxY]\n   * @param geographic: boolean\n   * @param fitOptions: olFitOptions\n   * @returns olExtend: [minX, minY, maxX, maxY]\n   */\n  public setExtent(extent: TGeoExtent, geographic?: boolean, fitOptions?: any): TGeoExtent {\n    const projection = (geographic) ? getProjection(WGS84) : getProjection(this.EPSG);\n    const transfomExtent = transformExtent(extent.slice(0, 4) as [number, number, number, number], projection, this.getProjection().getCode());\n    const newFitOptions = {\n      size: this.map.getSize(),\n      // padding: [100, 200, 100, 100] // Padding (in pixels) to be cleared inside the view. Values in the array are top, right, bottom and left padding. Default is [0, 0, 0, 0].\n    };\n    if (fitOptions) {\n      Object.assign(newFitOptions, fitOptions);\n    }\n    this.map.getView().fit(transfomExtent, fitOptions);\n    return (transfomExtent as TGeoExtent);\n  }\n\n  /** USED in map-ol.component */\n  /** ol.Coordinate xy */\n  public setCenter(center: number[], geographic?: boolean): number[] {\n    const projection = (geographic) ? getProjection(WGS84) : getProjection(this.EPSG);\n    const transfomCenter = transform(center, projection, this.getProjection().getCode());\n    // console.log('set center in svc', transfomCenter)\n    // console.log(this.map.getView().getCenter())\n    this.map.getView().setCenter(transfomCenter);\n    return transfomCenter;\n  }\n\n  /** USED in map-ol.component */\n  public getCenter(geographic?: boolean): any {\n    const dstProjection = (geographic) ? getProjection(WGS84) : getProjection(this.EPSG);\n    const srcProjection = getProjection(this.getProjection().getCode());\n    const transfomCenter = transform(this.map.getView().getCenter(), srcProjection, dstProjection);\n    return transfomCenter;\n  }\n  /**\n   *\n   * @param features: olFeature[]\n   * @param geographic: boolean\n   * @returns olExtend: [minX, minY, maxX, maxY]\n   */\n  public getFeaturesExtent(features: olFeature<any>[], geographic?: boolean): TGeoExtent {\n    const extent: any = features[0].getGeometry().getExtent().slice(0);\n    features.forEach((feature) => {\n      olExtend(extent, feature.getGeometry().getExtent());\n    });\n    if (geographic) {\n      const projection = getProjection(WGS84);\n      const transfomExtent = transformExtent(extent, this.getProjection().getCode(), projection);\n      return (transfomExtent as TGeoExtent);\n    } else {\n      return extent;\n    }\n  }\n\n  /** USED in map-ol.component */\n  /**\n   * @param geographic: boolean\n   * @returns olExtend: [minX, minY, maxX, maxY]\n   */\n  public getCurrentExtent(geographic?: boolean): TGeoExtent {\n    const projection = (geographic) ? getProjection(WGS84) : getProjection(this.EPSG);\n    const extent = this.map.getView().calculateExtent();\n    const transfomExtent = transformExtent(extent, this.getProjection().getCode(), projection);\n    return (transfomExtent as TGeoExtent);\n  }\n\n  /** USED in map-ol.component */\n  public setZoom(zoom: number, notifier?: 'map' | 'user') {\n    const view = this.map.getView();\n    view.setZoom(zoom);\n  }\n\n  /** USED in map-ol.component */\n  public getZoom(): number {\n    return this.map.getView().getZoom();\n  }\n\n  public zoomInOut(value: '-' | '+') {\n    const view = this.map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const duration = 250;\n    const delta = value === '+' ? 1 : -1;\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (duration > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration,\n          easing: easeOut\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n\n  public geoJsonToFeature(geojson: any): olFeature<any> {\n    const GEOJSON = new olGeoJSON({\n      dataProjection: WGS84,\n      featureProjection: this.EPSG\n    });\n    return GEOJSON.readFeature(geojson);\n  }\n\n  public geoJsonToFeatures(geojson: any): Array<olFeature<any>> {\n    const GEOJSON = new olGeoJSON({\n      dataProjection: WGS84,\n      featureProjection: this.EPSG\n    });\n    return GEOJSON.readFeatures(geojson);\n  }\n\n  /**\n   * @returns 'olProjection'\n   */\n  public getProjection() {\n    return this.map.getView().getProjection();\n  }\n\n  /**\n   * function to reproject vector features\n   * @param source:  olVectorSource\n   * @param srcProj: string (e.g. 'EPSG:4326')\n   * @param dstProj: string (e.g. 'EPSG:3857')\n   */\n  public reprojectFeatures(source: olVectorSource<any>, srcProj: string, dstProj: string) {\n    source.getFeatures().forEach(feature => {\n      feature.getGeometry().transform(srcProj, dstProj);\n    });\n  }\n\n  /**\n   * vector layers will be reprojected automatically\n   * wms layers will be updated with corresponding proj def in the requests.\n   * for other raster layers and for those wms layers which backend does not support target projection, please\n   * define initial(default) layer projection, so openlayers will reproject on the client side\n   * projection is proj~ProjectionLike\n   */\n  public setProjection(projection: olProjection | string) {\n    if (projection) {\n      let viewOptions: olViewOptions = {};\n      if (this.viewOptions) {\n        viewOptions = this.viewOptions;\n        viewOptions.minResolution = undefined;\n        viewOptions.maxResolution = undefined;\n        viewOptions.resolution = undefined;\n        viewOptions.resolutions = undefined;\n      }\n      if (projection instanceof olProjection) {\n        viewOptions.projection = projection;\n        const newCenter = transform(this.map.getView().getCenter(), this.map.getView().getProjection(), projection); // get center coordinates in the new projection\n        viewOptions.center = newCenter; // this.map.getView().getCenter();\n        // _viewOptions.extent = projection.getExtent();// || undefined;\n        viewOptions.zoom = this.map.getView().getZoom();\n      } else if (typeof projection === 'string') {\n        viewOptions.projection = projection;\n        viewOptions.center = this.map.getView().getCenter();\n        viewOptions.zoom = this.map.getView().getZoom();\n      }\n      const view = new olView(viewOptions);\n      const oldProjection = this.EPSG;\n      this.EPSG = view.getProjection().getCode();\n      this.map.setView(view);\n      this.view = this.map.getView();\n\n      // reprojecting vector layers\n      this.map.getLayers().getArray().forEach((layerGroup: olLayerGroup) => {\n        layerGroup.getLayers().getArray().forEach(layer => {\n          if (layer instanceof olLayer) {\n            let source = layer.getSource();\n            // check for nested sources, e.g. cluster or cluster of clusters etc\n            while (source['source']) {\n              source = source['source'];\n            }\n            if (source instanceof olVectorSource) {\n              this.reprojectFeatures(source, oldProjection, this.EPSG);\n            }\n          }\n        });\n      });\n      this.projectionChange.next(this.getProjection());\n    } else {\n      // console.log('projection code is undefined');\n    }\n  }\n\n  /**\n   * @param projDef.code - e.g.: \"EPSG:4326\"\n   * @param projDef.proj4js - e.g.: \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\"\n   */\n  public registerProjection(projDef: { code: string, proj4js: string }) {\n    proj4.defs(projDef.code, projDef.proj4js);\n    olRegister(proj4);\n  }\n\n  /**\n   * Returns a OpenLayers Projection from Options\n   */\n  public getOlProjection(projDef: olProjectionOptions): olProjection {\n    return new olProjection({\n      code: projDef.code,\n      extent: projDef.extent ? projDef.extent : undefined,\n      worldExtent: projDef.worldExtent ? projDef.worldExtent : undefined,\n      global: projDef.global ? projDef.global : false,\n      units: projDef.units ? projDef.units : undefined\n    });\n  }\n\n  private keysToUppercase<T>(obj: { [k: string]: any }) {\n    Object.keys(obj).forEach((key) => {\n      const k = key.toUpperCase();\n      if (k !== key) {\n        obj[k] = obj[key];\n        delete obj[key];\n      }\n    });\n    return obj as T;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation, Input, Inject, OnDestroy, AfterViewChecked, AfterContentChecked, AfterViewInit, ViewChild, ElementRef, NgZone } from '@angular/core';\n\n\n\n\nimport { MapState } from '@dlr-eoc/services-map-state';\nimport { MapStateService } from '@dlr-eoc/services-map-state';\nimport { Subscription } from 'rxjs';\nimport { skip } from 'rxjs/operators';\nimport { MapOlService, Tgroupfiltertype } from './map-ol.service';\nimport { LayersService, WmtsLayertype, Layer, WmsLayertype, WmtsLayer, WmsLayer, CustomLayer, VectorLayer, GeojsonLayertype, WfsLayertype } from '@dlr-eoc/services-layers';\n\nimport Map from 'ol/Map';\nimport { getUid as olGetUid } from 'ol/util';\n\nimport olBaseLayer from 'ol/layer/Base';\nimport olLayer from 'ol/layer/Layer';\nimport olLayerGroup from 'ol/layer/Group';\n\nimport Attribution from 'ol/control/Attribution';\nimport ScaleLine from 'ol/control/ScaleLine';\nimport Zoom from 'ol/control/Zoom';\n\nimport olMousePosition from 'ol/control/MousePosition';\nimport { toStringXY } from 'ol/coordinate';\n\nimport olFullScreen from 'ol/control/FullScreen';\n\nimport olOverviewMap from 'ol/control/OverviewMap';\nimport olTileLayer from 'ol/layer/Tile';\nimport olOSM from 'ol/source/OSM';\n\nimport olRotate from 'ol/control/Rotate';\nimport olMapBrowserEvent from 'ol/MapBrowserEvent';\nimport olMapEvent from 'ol/MapEvent';\nimport { Control as olControl } from 'ol/control';\nimport olVectorSource from 'ol/source/Vector';\nimport olRasterSource from 'ol/source/Raster';\nimport olGeometry from 'ol/geom/Geometry';\nimport olSourceCluster from 'ol/source/Cluster';\nimport olVectorLayer from 'ol/layer/Vector';\n\n\nexport interface IMapControls {\n  /** @see (Attribution options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/Attribution.js#L13 */\n  attribution?: boolean | object;\n  /** @see (ScaleLine options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/ScaleLine.js#L39 */\n  scaleLine?: boolean | object;\n  /** @see (Zoom options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/Zoom.js#L11 */\n  zoom?: boolean | object;\n  crosshair?: boolean;\n  /** @see (FullScreen options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/FullScreen.js#L13 */\n  fullScreen?: boolean | object;\n  /** @see (MousePosition options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/MousePosition.js#L25 */\n  mousePosition?: boolean | object;\n  /** @see (OverviewMap options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/OverviewMap.js#L46 */\n  overviewMap?: boolean | object;\n  /** @see (Rotate options) https://github.com/openlayers/openlayers/blob/v6.2.1/src/ol/control/Rotate.js#L11 */\n  rotate?: boolean | object;\n}\n\nconst ID_KEY = 'id';\n\n@Component({\n  selector: 'ukis-map-ol',\n  templateUrl: './map-ol.component.html',\n  styleUrls: ['./map-ol.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MapOlComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @ViewChild('mapDiv') mapDivView: ElementRef;\n\n  @Input('layersSvc') layersSvc: LayersService;\n  @Input('mapState') mapStateSvc: MapStateService;\n  @Input('controls') controls: IMapControls;\n\n  map: Map;\n  subs: Subscription[] = [];\n  mapOnMoveend;\n  mapOnClickMove;\n  mapOnDclick;\n\n  private privMapwidth = 0;\n  private get mapwidth() {\n    return this.privMapwidth;\n  }\n\n  private set mapwidth(width) {\n    this.privMapwidth = width;\n    this.map.updateSize();\n  }\n\n  constructor(private mapSvc: MapOlService, private ngZone: NgZone) {\n  }\n  /**\n   * - subscribe to layers oninit so they get pulled after view init\n   */\n  ngOnInit() {\n    /** Subscribe to mapStateSvc before map is created */\n    this.subscribeToMapState();\n    this.initMap();\n    this.subscribeToLayers();\n  }\n\n  /**\n   * - set target of ol map after angular has rendered the element\n   * - then subscribe to map events\n   */\n  ngAfterViewInit() {\n    this.map.setTarget(this.mapDivView.nativeElement);\n\n    /** Get last state from mapStateSvc and set it, so a User can set the initial MapState in a component on ngOnInit */\n    const oldMapState = this.mapStateSvc.getMapState().getValue();\n    this.setMapState(oldMapState);\n\n    /** Subscribe to map events when the map completely created  */\n    this.subscribeToMapEvents();\n    this.map.getTargetElement().addEventListener('mouseleave', this.removePopupsOnMouseLeave);\n  }\n\n  ngAfterViewChecked() {\n    /**\n     * - compare map size to update Map Size on container resize\n     * - set Timeout to also resize map on route change\n     */\n    if (this.mapDivView) {\n      const mapWidth = this.mapDivView.nativeElement.offsetWidth;\n      if (mapWidth !== this.mapwidth) {\n        this.ngZone.runOutsideAngular(() => {\n          setTimeout(() => {\n            this.mapwidth = mapWidth;\n          }, 100);\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n    if (this.map) {\n      this.map.un('moveend', this.mapOnMoveend);\n      this.map.un('click', this.mapOnClickMove);\n      this.map.un('dblclick', this.mapOnDclick);\n      this.map.getTargetElement().removeEventListener('mouseleave', this.removePopupsOnMouseLeave);\n      this.map.getInteractions().forEach((i) => {\n        this.map.removeInteraction(i);\n      });\n    }\n  }\n\n  private removePopupsOnMouseLeave = (evt) => {\n    this.mapSvc.removeAllPopups((item) => {\n      return item.get('addEvent') === 'pointermove';\n    });\n  }\n\n  private addUpdateLayers(layers: Layer[], filtertype: Tgroupfiltertype, layersunderneath: Array<Tgroupfiltertype>) {\n    /** get all underneath layers for zIndex */\n    let otherlayerslength = 0;\n    layersunderneath.forEach(itemType => {\n      otherlayerslength += this.mapSvc.getLayers(itemType).length;\n    });\n\n    /** if length of layers has changed add new layers */\n    if (layers.length !== this.mapSvc.getLayers(filtertype).length) {\n      this.mapSvc.setUkisLayers(layers, filtertype);\n      // if layers underneath add thhen to the zIndex of layer\n      if (otherlayerslength > 0) {\n        for (const layer of layers) {\n          const ollayer = this.mapSvc.getLayerByKey({ key: ID_KEY, value: layer.id }, filtertype);\n          if (ollayer) {\n            if (ollayer.getZIndex() !== layers.indexOf(layer) + otherlayerslength) {\n              ollayer.setZIndex(layers.indexOf(layer) + otherlayerslength);\n              this.setZIndexForGroup(ollayer, layers, layer, otherlayerslength);\n            }\n          }\n        }\n      }\n    } else {\n      /** if layers already on the map -length not changed- update them */\n      for (const layer of layers) {\n        const ollayer = this.mapSvc.getLayerByKey({ key: ID_KEY, value: layer.id }, filtertype) as olBaseLayer | olLayer<any> | olLayerGroup;\n        if (ollayer) {\n          if (ollayer.getVisible() !== layer.visible) {\n            ollayer.setVisible(layer.visible);\n          }\n          if (ollayer.getOpacity() !== layer.opacity) {\n            ollayer.setOpacity(layer.opacity);\n          }\n          if (layer instanceof CustomLayer && ollayer instanceof olLayer) {\n            const newSource = layer.custom_layer.getSource();\n            const oldSource = ollayer.getSource();\n            if (newSource && olGetUid(oldSource) !== olGetUid(newSource)) {\n              ollayer.setSource(newSource);\n              // https://github.com/dlr-eoc/ukis-frontend-libraries/issues/100\n              if(oldSource instanceof olRasterSource){\n                oldSource.dispose();\n              }\n            }\n          } else if (layer instanceof CustomLayer && layer.custom_layer instanceof olLayerGroup && ollayer instanceof olLayerGroup) {\n            const newLayers = layer.custom_layer.getLayers().getArray();\n            const oldLayers = ollayer.getLayers().getArray();\n\n            /** assume the order and length of layers is not changing and no more grouping!!! */\n            oldLayers.forEach((l, i) => {\n              const newLayer = newLayers[i];\n              if (l instanceof olLayer && newLayer instanceof olLayer) {\n                const oldSource = l.getSource();\n                const newSource = newLayer.getSource();\n                if (newSource && olGetUid(oldSource) !== olGetUid(newSource)) {\n                  l.setSource(newSource);\n                }\n              }\n            });\n          }\n          if (otherlayerslength > 0) {\n            if (ollayer.getZIndex() !== layers.indexOf(layer) + otherlayerslength) {\n              ollayer.setZIndex(layers.indexOf(layer) + otherlayerslength);\n              this.setZIndexForGroup(ollayer, layers, layer, otherlayerslength);\n            }\n\n          } else {\n            if (ollayer.getZIndex() !== layers.indexOf(layer)) {\n              ollayer.setZIndex(layers.indexOf(layer));\n              this.setZIndexForGroup(ollayer, layers, layer);\n            }\n          }\n          this.updateLayerParamsWith(ollayer as olLayer<any>, layer);\n        }\n      }\n    }\n  }\n\n  /** addresses an issue in openlayers: https://github.com/openlayers/openlayers/issues/6654 */\n  private setZIndexForGroup(ollayer, layers: Layer[], layer: Layer, otherlayerslength?: number) {\n    if (ollayer instanceof olLayerGroup) {\n      (ollayer as olLayerGroup).getLayers().forEach(l => {\n        if (otherlayerslength) {\n          l.setZIndex(layers.indexOf(layer) + otherlayerslength);\n        } else {\n          l.setZIndex(layers.indexOf(layer));\n        }\n      });\n    }\n  }\n\n  private updateLayerParamsWith(oldLayer: olLayer<any>, newLayer: Layer): void {\n    switch (newLayer.type) {\n      case WmsLayertype:\n        this.updateWmsLayerParamsWith(oldLayer, newLayer as WmsLayer);\n        break;\n      case WmtsLayertype:\n        this.updateWmtsLayerParamsWith(oldLayer, newLayer as WmtsLayer);\n        break;\n      case GeojsonLayertype:\n        this.updateGeojsonLayerParamsWith(oldLayer as any, newLayer as VectorLayer);\n        break;\n      case WfsLayertype:\n        this.updateWfsLayerParamsWith(oldLayer as any, newLayer as VectorLayer);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private updateWfsLayerParamsWith(oldLayer: olVectorLayer<olVectorSource<olGeometry>>, newLayer: VectorLayer) {\n\n    // step 1: update style\n    if (newLayer.options && newLayer.options.style !== oldLayer.getStyle()) {\n      oldLayer.setStyle(newLayer.options.style);\n    }\n\n    // step 2: update source\n    if (oldLayer.getSource().getUrl() !== newLayer.url) {\n      oldLayer.getSource().setUrl(newLayer.url);\n    }\n  }\n\n  /**\n   * TODO: set all other props of GeoJsonLayer.options and GeoJsonLayer.cluster (see: IVectorLayerOptions)\n   */\n  updateGeojsonLayerParamsWith(oldLayer: olVectorLayer<olVectorSource<olGeometry>>, newGeojsonLayer: VectorLayer) {\n    const oldSource = oldLayer.getSource();\n    if (oldSource) {\n      if (newGeojsonLayer.data) {\n        const features = this.mapSvc.geoJsonToFeatures(newGeojsonLayer.data)\n        if (oldSource instanceof olSourceCluster) {\n          const vectorSource = oldSource.getSource();\n          vectorSource.clear();\n          vectorSource.addFeatures(features);\n        } else {\n          oldSource.clear();\n          oldSource.addFeatures(features);\n        }\n      } else if (newGeojsonLayer.url) {\n        if (oldSource instanceof olSourceCluster) {\n          const vectorSource = oldSource.getSource();\n          vectorSource.setUrl(newGeojsonLayer.url);\n        } else {\n          oldSource.setUrl(newGeojsonLayer.url);\n        }\n      }\n\n      // 'distance' in also checks for 0 values\n      if (typeof newGeojsonLayer?.cluster === 'object' && 'distance' in newGeojsonLayer.cluster && oldSource instanceof olSourceCluster) {\n        oldSource.setDistance(newGeojsonLayer.cluster.distance);\n      }\n    }\n\n    if (newGeojsonLayer?.options?.style) {\n      oldLayer.setStyle(newGeojsonLayer.options.style);\n    }\n  }\n\n  private updateWmsLayerParamsWith(oldLayer: olLayer<any>, newWmsLayer: WmsLayer): void {\n    if (oldLayer instanceof olLayer) {\n      const source = oldLayer.getSource();\n      const oldParams = source.getParams();\n      const newParams = newWmsLayer.params;\n      if (!this.shallowEqual(oldParams, newParams)) {\n        oldLayer.getSource().updateParams(newParams);\n      }\n    }\n  }\n\n  private updateWmtsLayerParamsWith(oldLayer: olLayer<any>, newWmtsLayer: WmtsLayer): void {\n    // contrary to a wms-source, a wmts-source has neither 'getParams' nor 'updateParams', so we need to do this manually.\n    if (oldLayer instanceof olLayer) {\n      const source = oldLayer.getSource();\n      const oldStyle = source.getStyle();\n      const oldFormat = source.getFormat();\n      const oldVersion = source.getVersion();\n      const oldMatrix = source.getMatrixSet();\n      const newStyle = newWmtsLayer.params.style;\n      const newFormat = newWmtsLayer.params.format;\n      const newVersion = newWmtsLayer.params.version;\n      const newMatrix = newWmtsLayer.params.matrixSetOptions.matrixSet;\n      if (newStyle !== undefined && oldStyle !== newStyle\n        || newFormat !== undefined && oldFormat !== newFormat\n        || newVersion !== undefined && oldVersion !== newVersion\n        || newMatrix !== undefined && oldMatrix !== newMatrix) {\n        // console.log(oldStyle, oldFormat, oldVersion, oldMatrix)\n        // console.log(newStyle, newFormat, newVersion, newMatrix)\n        const olFiltertype = newWmtsLayer.filtertype.toLowerCase() as Tgroupfiltertype;\n        // this.mapSvc.setUkisLayer(newWmtsLayer, olFiltertype);\n        this.mapSvc.updateUkisLayer(newWmtsLayer, olFiltertype);\n      }\n    }\n  }\n\n  private shallowEqual(a: object, b: object): boolean {\n    // Create arrays of property names\n    const aProps = Object.getOwnPropertyNames(a);\n    const bProps = Object.getOwnPropertyNames(b);\n\n    // If number of properties is different,\n    // objects are not equivalent\n    if (aProps.length !== bProps.length) {\n      return false;\n    }\n\n    for (const propName of aProps) {\n      // If values of same property are not equal,\n      // objects are not equivalent\n      if (a[propName] !== b[propName]) {\n        return false;\n      }\n    }\n\n    // If we made it this far, objects\n    // are considered equivalent\n    return true;\n  }\n\n  private addUpdateBaseLayers(layers) {\n    /** if length of layers has changed add new layers */\n    if (layers.length !== this.mapSvc.getLayers('baselayers').length) {\n      // set only one visible at start\n      const visiblelayers = layers.filter(l => l.visible === true);\n      if (visiblelayers.length === 0) {\n        layers[0].visible = true;\n      } else if (visiblelayers.length > 1) {\n        layers.forEach(l => l.visible = false);\n        layers[0].visible = true;\n      }\n      this.mapSvc.setUkisLayers(layers, 'baselayers');\n    } else {\n      /** if layers already on the map -length not changed- update them */\n      for (const layer of layers) {\n        const bllayer = this.mapSvc.getLayerByKey({ key: ID_KEY, value: layer.id }, 'baselayers');\n        if (bllayer) {\n          if (bllayer.getVisible() !== layer.visible) {\n            bllayer.setVisible(layer.visible);\n          }\n          if (bllayer.getZIndex() !== layers.indexOf(layer)) {\n            bllayer.setZIndex(layers.indexOf(layer));\n          }\n          if (bllayer.getOpacity() !== layer.opacity) {\n            bllayer.setOpacity(layer.opacity);\n          }\n        }\n      }\n    }\n  }\n\n  private subscribeToLayers() {\n    // ----------------------\n    // add/remove layers\n    if (this.layersSvc) {\n      const baselayersAddRemoveOn = this.layersSvc.getBaseLayers().subscribe(layers => this.addUpdateBaseLayers(layers));\n      this.subs.push(baselayersAddRemoveOn);\n      const onLayers = this.layersSvc.getLayers().subscribe(layers => this.addUpdateLayers(layers, 'layers', ['baselayers']));\n      this.subs.push(onLayers);\n      const onOverlays = this.layersSvc.getOverlays().subscribe(layers => this.addUpdateLayers(layers, 'overlays', ['baselayers', 'layers']));\n      this.subs.push(onOverlays);\n    }\n  }\n\n  private setMapState(mapState: MapState) {\n    const lastAction = this.mapStateSvc.getLastAction().getValue();\n    if (mapState.options.notifier === 'user') {\n      if (lastAction === 'setExtent') {\n        this.mapSvc.setExtent(mapState.extent, true);\n      } else if (lastAction === 'setState') {\n        this.mapSvc.setZoom(mapState.zoom, mapState.options.notifier);\n        this.mapSvc.setCenter([mapState.center.lon, mapState.center.lat], true);\n      }\n    }\n    /* else if (mapState.options.notifier === 'map') {\n      console.log(\"--------Map triggered mapState change\", mapState);\n    } */\n  }\n\n  private subscribeToMapState() {\n    if (this.mapStateSvc) {\n      /** .pipe(skip(1)) skips the first, e.g. initial value of the BehaviorSubject!! -- https://www.learnrxjs.io/learn-rxjs/operators/filtering/skip#why-use-skip  */\n      const mapStateOn = this.mapStateSvc.getMapState().pipe(skip(1)).subscribe(state => this.setMapState(state));\n      this.subs.push(mapStateOn);\n    }\n  }\n\n  private subscribeToMapEvents() {\n    this.mapOnMoveend = (evt: olMapEvent) => {\n      // const zoom = Math.round(this.mapSvc.getZoom());\n      const zoom = this.mapSvc.getZoom();\n      const center = this.mapSvc.getCenter(true);\n      const extent = this.mapSvc.getCurrentExtent(true);\n\n      // const newCenter = { lat: parseFloat(center[1].toFixed(6)), lon: parseFloat(center[0].toFixed(6)) };\n      const newCenter = { lat: parseFloat(center[1]), lon: parseFloat(center[0]) };\n      const ms = new MapState(zoom, newCenter, { notifier: 'map' }, extent);\n      this.mapStateSvc.setMapState(ms);\n    };\n    this.map.on('moveend', this.mapOnMoveend);\n\n    /** handle click and pointermove/mousemove */\n    this.mapOnClickMove = (evt: olMapBrowserEvent<PointerEvent>) => {\n      this.mapSvc.layersOnMapEvent(evt);\n    };\n    this.map.on(['click','pointermove'], this.mapOnClickMove);\n\n    /** handle double click */\n    this.mapOnDclick = (evt: olMapBrowserEvent<PointerEvent>) => {\n      this.mapSvc.removeAllPopups();\n    };\n    this.map.on('dblclick', this.mapOnDclick);\n  }\n\n\n  private initMap() {\n    const olMapView = this.mapSvc.createMap();\n    this.map = olMapView.map; //\n\n    this.setControls();\n    if (!this.layersSvc) {\n      console.log('there is no layersSvc as defined!');\n    }\n\n    if (!this.mapStateSvc) {\n      console.log('there is no mapStateSvc as defined!');\n    }\n  }\n\n  private setControls() {\n    // add Control only if this functions is defined\n    const tempControls: olControl[] = [];\n    const oldControls: olControl[] = [];\n    if (this.map) {\n      const controlsArry = this.map.getControls().getArray();\n      controlsArry.forEach(i => oldControls.push(i));\n      /** fix: The Attribution Control is displayed twice #3 */\n      this.map.getControls().clear();\n    }\n\n    if (this.controls && this.map) {\n      if (this.controls.attribution !== false) {\n        let attributionOptions = {\n          collapsible: true,\n          collapsed: false\n        };\n        if (typeof this.controls.attribution === 'object') {\n          attributionOptions = Object.assign(attributionOptions, this.controls.attribution);\n        }\n        const attribution = new Attribution(attributionOptions);\n        tempControls.push(attribution);\n      }\n      if (this.controls.scaleLine) {\n        let scaleLineOptions = {};\n        if (typeof this.controls.scaleLine === 'object') {\n          scaleLineOptions = Object.assign(scaleLineOptions, this.controls.scaleLine);\n        }\n        const scaleLineControl = new ScaleLine(scaleLineOptions);\n        tempControls.push(scaleLineControl);\n      }\n      if (this.controls.zoom !== false) {\n        let zoomOptions = {};\n        if (typeof this.controls.zoom === 'object') {\n          zoomOptions = Object.assign(zoomOptions, this.controls.zoom);\n        }\n        const zoomControl = new Zoom(zoomOptions);\n        tempControls.push(zoomControl);\n      }\n      if (this.controls.mousePosition) {\n        let mousePositionOptions = {\n          coordinateFormat: coordinate => {\n            return toStringXY(coordinate, 2);\n          },\n          projection: 'EPSG:4326'\n        };\n        if (typeof this.controls.mousePosition === 'object') {\n          mousePositionOptions = Object.assign(mousePositionOptions, this.controls.mousePosition);\n        }\n        const mousePosition = new olMousePosition(mousePositionOptions);\n        tempControls.push(mousePosition);\n      }\n      if (this.controls.fullScreen) {\n        let fullScreenOptions = {};\n        if (typeof this.controls.fullScreen === 'object') {\n          fullScreenOptions = Object.assign(fullScreenOptions, this.controls.fullScreen);\n        }\n        const fullScreen = new olFullScreen(fullScreenOptions);\n        tempControls.push(fullScreen);\n      }\n      if (this.controls.overviewMap) {\n        const icon = document.createElement('spawn');\n        icon.innerHTML = '<clr-icon shape=\"world\"></clr-icon>';\n        let overviewMapOptions = {\n          layers: [new olTileLayer({\n            source: new olOSM()\n          })],\n          label: icon\n        };\n        if (typeof this.controls.overviewMap === 'object') {\n          overviewMapOptions = Object.assign(overviewMapOptions, this.controls.overviewMap);\n        }\n        const overviewMap = new olOverviewMap(overviewMapOptions);\n        tempControls.push(overviewMap);\n      }\n      if (this.controls.rotate) {\n        let rotateOptions = {};\n        if (typeof this.controls.rotate === 'object') {\n          rotateOptions = Object.assign(rotateOptions, this.controls.rotate);\n        }\n        const rotate = new olRotate(rotateOptions);\n        tempControls.push(rotate);\n      }\n\n      if (tempControls.length) {\n        /**\n         * check tempControls dose not include oldControls\n         * https://medium.com/@alvaro.saburido/set-theory-for-arrays-in-es6-eb2f20a61848#f22b\n         */\n        const difference = oldControls.filter(x => !tempControls.includes(x));\n        difference.forEach(i => tempControls.push(i));\n        this.map.getControls().extend(tempControls);\n      }\n    }\n  }\n}\n","<div #mapDiv id=\"map\" ref=\"map\" class=\"map\">\n  <div *ngIf=\"controls && controls.crosshair\" id=\"crosshair\" class=\"crosshair\">+</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MapOlComponent } from './map-ol.component';\nimport { MapOlService } from './map-ol.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [MapOlComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [MapOlComponent],\n  providers: [MapOlService]\n})\nexport class MapOlModule { }\n","/*\n * Public API Surface of map-ol\n */\n\nexport * from './lib/map-ol.service';\nexport * from './lib/map-ol.component';\nexport * from './lib/map-ol.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ID_KEY","getProjection","olCluster","olGetUid","olGetHeight","olGetWidth","olGetTopLeft","olVectorTile","olContainsCoordinate","olExtend","olRegister","i1.MapOlService"],"mappings":"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"}