import { RasterLayer } from './Layers';
export class WmtsLayer extends RasterLayer {
    constructor(options) {
        super(options);
    }
}
export const isWmtsLayer = (layer) => {
    return layer.type === 'wmts';
};
export class WmsLayer extends RasterLayer {
    constructor(options) {
        super(options);
    }
}
export const isWmsLayer = (layer) => {
    return layer.type === 'wms';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFzdGVyTGF5ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2VydmljZXMtbGF5ZXJzL3NyYy9saWIvdHlwZXMvUmFzdGVyTGF5ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBUyxXQUFXLEVBQTJDLE1BQU0sVUFBVSxDQUFDO0FBa0J2RixNQUFNLE9BQU8sU0FBVSxTQUFRLFdBQVc7SUFLeEMsWUFBWSxPQUFxQjtRQUMvQixLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakIsQ0FBQztDQUNGO0FBOEJELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLEtBQVksRUFBc0IsRUFBRTtJQUM5RCxPQUFPLEtBQUssQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDO0FBQy9CLENBQUMsQ0FBQztBQVNGLE1BQU0sT0FBTyxRQUFTLFNBQVEsV0FBVztJQUt2QyxZQUFZLE9BQW9CO1FBQzlCLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNqQixDQUFDO0NBQ0Y7QUFZRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxLQUFZLEVBQXFCLEVBQUU7SUFDNUQsT0FBTyxLQUFLLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQztBQUM5QixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMYXllciwgUmFzdGVyTGF5ZXIsIElSYXN0ZXJMYXllck9wdGlvbnMsIElSYXN0ZXJMYXllclBhcmFtcyB9IGZyb20gJy4vTGF5ZXJzJztcbi8qKlxuICogVGhlIGZvbGxvd2luZyBjbGFzc2VzIHRyeSB0byBpbmNvcnBvcmF0ZSBhbnkgaW5mb3JtYXRpb24gdGhhdCBtYXAtbGlicmFyaWVzIChvbCwgbWFwYm94LCBsZWFmbGV0KSBtaWdodCBuZWVkIHRvIGRpc3BsYXkgcmFzdGVyLWxheWVycy5cbiAqIExpa2UgTGF5ZXJzLnRzLCB0aGVzZSBjbGFzc2VzIGFyZSBpbnRlbmRlZCBhcyBhbiBhYnN0cmFjdGlvbiBvdmVyIGFsbCBtYXAtbGlicmFyaWVzLlxuICogSG93ZXZlciwgdGhleSB3ZXJlIGRldmVsb3BlZCB3aXRoIG9wZW4tbGF5ZXJzIGluIG1pbmQsIGFuZCBhcyBzdWNoIG1pZ2h0IG5vdCAoeWV0KSBjb250YWluIGFsbCBpbmZvcm1hdGlvbiB0aGF0IG90aGVyIG1hcC1saWJyYXJpZXMgcmVxdWlyZS5cbiAqIFBsZWFzZSBleHRlbmQgdGhlc2UgY2xhc3NlcyB3aXRoIGFueSByZXF1aXJlZCBpbmZvcm1hdGlvbiB5b3UgbWlnaHQgZmluZC5cbiAqL1xuXG5cblxuZXhwb3J0IGludGVyZmFjZSBJV210c09wdGlvbnMgZXh0ZW5kcyBJUmFzdGVyTGF5ZXJPcHRpb25zIHtcbiAgdHlwZTogJ3dtdHMnO1xuICBwYXJhbXM6IElXbXRzUGFyYW1zO1xuICAvKiogY2hlY2sgaWYgdGhlIHNlcnZpY2Ugc3VwcG9ydHMgdGhpcyB0aWxlc2l6ZSAqL1xuICB0aWxlU2l6ZT86IG51bWJlcjtcbn1cblxuXG5leHBvcnQgY2xhc3MgV210c0xheWVyIGV4dGVuZHMgUmFzdGVyTGF5ZXIgaW1wbGVtZW50cyBJV210c09wdGlvbnMge1xuICB0eXBlOiAnd210cyc7XG4gIHBhcmFtczogSVdtdHNQYXJhbXM7XG4gIC8qKiBjaGVjayBpZiB0aGUgc2VydmljZSBzdXBwb3J0cyB0aGlzIHRpbGVzaXplICovXG4gIHRpbGVTaXplPzogbnVtYmVyO1xuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBJV210c09wdGlvbnMpIHtcbiAgICBzdXBlcihvcHRpb25zKTtcbiAgfVxufVxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgSUJhc2VNYXRyaXhTZXQge1xuICAvKiogdGhlIE1hdHJpeFNldCBJRCBpbiBXTVRTIENhcGFiaWxpdGllcyAtIHVzZWQgZm9yIEdldFRpbGUgUmVxdWVzdCAqL1xuICBtYXRyaXhTZXQ6IHN0cmluZztcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSUxpc3RNYXRyaXhTZXQgZXh0ZW5kcyBJQmFzZU1hdHJpeFNldCB7XG4gIG1hdHJpeElkczogc3RyaW5nW107XG4gIHJlc29sdXRpb25zOiBudW1iZXJbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJU2ltcGxlTWF0cml4U2V0IGV4dGVuZHMgSUJhc2VNYXRyaXhTZXQge1xuICAvKiogbGV2ZWxzIHRvIGNyZWF0ZSByZXNvbHV0aW9ucyBhbmQgbWF0cml4SWRzICovXG4gIHJlc29sdXRpb25MZXZlbHM/OiBudW1iZXI7XG4gIC8qKiBQcmVmaXggb2YgdGhlIG1hdHJpeElkICAqL1xuICB0aWxlTWF0cml4UHJlZml4Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElXbXRzUGFyYW1zIHtcbiAgLyoqIExheWVyIG5hbWUgYXMgYWR2ZXJ0aXNlZCBpbiB0aGUgV01UUyBjYXBhYmlsaXRpZXMuICovXG4gIGxheWVyOiBzdHJpbmc7XG4gIC8qKiBTdHlsZSBuYW1lIGFzIGFkdmVydGlzZWQgaW4gdGhlIFdNVFMgY2FwYWJpbGl0aWVzLiAqL1xuICBzdHlsZTogc3RyaW5nO1xuICBtYXRyaXhTZXRPcHRpb25zPzogSVNpbXBsZU1hdHJpeFNldCB8IElMaXN0TWF0cml4U2V0O1xuICBwcm9qZWN0aW9uPzogc3RyaW5nO1xuICBmb3JtYXQ/OiBzdHJpbmc7XG4gIHZlcnNpb24/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBpc1dtdHNMYXllciA9IChsYXllcjogTGF5ZXIpOiBsYXllciBpcyBXbXRzTGF5ZXIgPT4ge1xuICByZXR1cm4gbGF5ZXIudHlwZSA9PT0gJ3dtdHMnO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBJV21zT3B0aW9ucyBleHRlbmRzIElSYXN0ZXJMYXllck9wdGlvbnMge1xuICB0eXBlOiAnd21zJztcbiAgcGFyYW1zOiBJV21zUGFyYW1zO1xuICAvKiogY2hlY2sgaWYgdGhlIHNlcnZpY2Ugc3VwcG9ydHMgdGhpcyB0aWxlc2l6ZSAqL1xuICB0aWxlU2l6ZT86IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIFdtc0xheWVyIGV4dGVuZHMgUmFzdGVyTGF5ZXIgaW1wbGVtZW50cyBJV21zT3B0aW9ucyB7XG4gIHR5cGU6ICd3bXMnO1xuICBwYXJhbXM6IElXbXNQYXJhbXM7XG4gIC8qKiBjaGVjayBpZiB0aGUgc2VydmljZSBzdXBwb3J0cyB0aGlzIHRpbGVzaXplICovXG4gIHRpbGVTaXplPzogbnVtYmVyO1xuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBJV21zT3B0aW9ucykge1xuICAgIHN1cGVyKG9wdGlvbnMpO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVdtc1BhcmFtcyBleHRlbmRzIElSYXN0ZXJMYXllclBhcmFtcyB7XG4gIExBWUVSUzogc3RyaW5nO1xuICBGT1JNQVQ/OiBzdHJpbmc7XG4gIFRJTUU/OiBzdHJpbmc7XG4gIFZFUlNJT04/OiBzdHJpbmc7XG4gIFRJTEVEPzogc3RyaW5nO1xuICBUUkFOU1BBUkVOVD86IGJvb2xlYW47XG4gIFNUWUxFUz86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IGlzV21zTGF5ZXIgPSAobGF5ZXI6IExheWVyKTogbGF5ZXIgaXMgV21zTGF5ZXIgPT4ge1xuICByZXR1cm4gbGF5ZXIudHlwZSA9PT0gJ3dtcyc7XG59O1xuIl19