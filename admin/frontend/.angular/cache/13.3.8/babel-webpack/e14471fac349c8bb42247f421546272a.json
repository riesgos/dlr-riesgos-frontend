{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\lang_m13\\\\Desktop\\\\code\\\\js\\\\ukis_projects\\\\dlr-riesgos-frontend\\\\admin\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { listenForAttributeChange as t } from \"../utils/events.js\";\nimport { getActiveElement as s } from \"../utils/focus.js\";\n\nfunction e(t = {\n  focus: !0\n}) {\n  return s => s.addInitializer(s => new r(s, t));\n}\n\nclass r {\n  constructor(t, e = {\n    focus: !0\n  }) {\n    this.host = t, this.config = e, this.activeElement = s(), this.host.addController(this);\n  }\n\n  get current() {\n    return this.host.trigger ? this._current : this.activeElement;\n  }\n\n  get prev() {\n    return this._prev;\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.observer = t(_this.host, \"hidden\", () => {\n        const t = s();\n        !_this.host.hidden && t ? _this.activeElement = t : _this.focusCurrent();\n      });\n    })();\n  }\n\n  hostUpdate() {\n    this._current !== this.host.trigger && (this._prev = this._current, this._current = this.host.trigger ? this.host.trigger : this.activeElement);\n  }\n\n  hostDisconnected() {\n    this.focusCurrent(), this.observer?.disconnect();\n  }\n\n  focusCurrent() {\n    this.config.focus && this.current?.focus();\n  }\n\n}\n\nexport { r as TriggerController, e as triggerable };","map":{"version":3,"sources":["C:/Users/lang_m13/Desktop/code/js/ukis_projects/dlr-riesgos-frontend/admin/frontend/node_modules/@cds/core/internal/controllers/trigger.controller.js"],"names":["listenForAttributeChange","t","getActiveElement","s","e","focus","addInitializer","r","constructor","host","config","activeElement","addController","current","trigger","_current","prev","_prev","hostConnected","observer","hidden","focusCurrent","hostUpdate","hostDisconnected","disconnect","TriggerController","triggerable"],"mappings":";AAAA,SAAOA,wBAAwB,IAAIC,CAAnC,QAAyC,oBAAzC;AAA8D,SAAOC,gBAAgB,IAAIC,CAA3B,QAAiC,mBAAjC;;AAAqD,SAASC,CAAT,CAAWH,CAAC,GAAC;AAACI,EAAAA,KAAK,EAAC,CAAC;AAAR,CAAb,EAAwB;AAAC,SAAOF,CAAC,IAAEA,CAAC,CAACG,cAAF,CAAkBH,CAAC,IAAE,IAAII,CAAJ,CAAMJ,CAAN,EAAQF,CAAR,CAArB,CAAV;AAA4C;;AAAA,MAAMM,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACP,CAAD,EAAGG,CAAC,GAAC;AAACC,IAAAA,KAAK,EAAC,CAAC;AAAR,GAAL,EAAgB;AAAC,SAAKI,IAAL,GAAUR,CAAV,EAAY,KAAKS,MAAL,GAAYN,CAAxB,EAA0B,KAAKO,aAAL,GAAmBR,CAAC,EAA9C,EAAiD,KAAKM,IAAL,CAAUG,aAAV,CAAwB,IAAxB,CAAjD;AAA+E;;AAAW,MAAPC,OAAO,GAAE;AAAC,WAAO,KAAKJ,IAAL,CAAUK,OAAV,GAAkB,KAAKC,QAAvB,GAAgC,KAAKJ,aAA5C;AAA0D;;AAAQ,MAAJK,IAAI,GAAE;AAAC,WAAO,KAAKC,KAAZ;AAAkB;;AAAMC,EAAAA,aAAa,GAAE;AAAA;;AAAA;AAAC,MAAA,KAAI,CAACC,QAAL,GAAclB,CAAC,CAAC,KAAI,CAACQ,IAAN,EAAW,QAAX,EAAqB,MAAI;AAAC,cAAMR,CAAC,GAACE,CAAC,EAAT;AAAY,SAAC,KAAI,CAACM,IAAL,CAAUW,MAAX,IAAmBnB,CAAnB,GAAqB,KAAI,CAACU,aAAL,GAAmBV,CAAxC,GAA0C,KAAI,CAACoB,YAAL,EAA1C;AAA8D,OAApG,CAAf;AAAD;AAAuH;;AAAAC,EAAAA,UAAU,GAAE;AAAC,SAAKP,QAAL,KAAgB,KAAKN,IAAL,CAAUK,OAA1B,KAAoC,KAAKG,KAAL,GAAW,KAAKF,QAAhB,EAAyB,KAAKA,QAAL,GAAc,KAAKN,IAAL,CAAUK,OAAV,GAAkB,KAAKL,IAAL,CAAUK,OAA5B,GAAoC,KAAKH,aAApH;AAAmI;;AAAAY,EAAAA,gBAAgB,GAAE;AAAC,SAAKF,YAAL,IAAoB,KAAKF,QAAL,EAAeK,UAAf,EAApB;AAAgD;;AAAAH,EAAAA,YAAY,GAAE;AAAC,SAAKX,MAAL,CAAYL,KAAZ,IAAmB,KAAKQ,OAAL,EAAcR,KAAd,EAAnB;AAAyC;;AAAxmB;;AAAymB,SAAOE,CAAC,IAAIkB,iBAAZ,EAA8BrB,CAAC,IAAIsB,WAAnC","sourcesContent":["import{listenForAttributeChange as t}from\"../utils/events.js\";import{getActiveElement as s}from\"../utils/focus.js\";function e(t={focus:!0}){return s=>s.addInitializer((s=>new r(s,t)))}class r{constructor(t,e={focus:!0}){this.host=t,this.config=e,this.activeElement=s(),this.host.addController(this)}get current(){return this.host.trigger?this._current:this.activeElement}get prev(){return this._prev}async hostConnected(){this.observer=t(this.host,\"hidden\",(()=>{const t=s();!this.host.hidden&&t?this.activeElement=t:this.focusCurrent()}))}hostUpdate(){this._current!==this.host.trigger&&(this._prev=this._current,this._current=this.host.trigger?this.host.trigger:this.activeElement)}hostDisconnected(){this.focusCurrent(),this.observer?.disconnect()}focusCurrent(){this.config.focus&&this.current?.focus()}}export{r as TriggerController,e as triggerable};\n"]},"metadata":{},"sourceType":"module"}