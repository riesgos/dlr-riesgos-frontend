import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@clr/angular";
export class GlobalAlertComponent {
    constructor() {
        this.alertChange = new EventEmitter();
    }
    close() {
        this.alert = null;
        this.alertChange.emit(this.alert);
    }
}
GlobalAlertComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: GlobalAlertComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
GlobalAlertComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.6", type: GlobalAlertComponent, selector: "ukis-global-alert", inputs: { alert: "alert" }, outputs: { alertChange: "alertChange" }, ngImport: i0, template: "<div *ngIf=\"alert\" class=\"alert alert-app-level\" [ngClass]=\"'alert-'+alert.type\" role=\"alert\">\n  <div class=\"alert-items\">\n    <div class=\"alert-item static\">\n      <div class=\"alert-icon-wrapper\">\n        <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n      </div>\n      <div class=\"alert-text\" [innerHTML]=alert.text></div>\n      <div *ngIf=\"alert.actions\" class=\"alert-actions\">\n        <button *ngFor=\"let action of alert.actions\" class=\"btn alert-action\" aria-label=\"alert action\"\n          (click)=\"action.callback && action.callback()\">{{action.title}}</button>\n      </div>\n    </div>\n  </div>\n  <button *ngIf=\"alert.closeable\" type=\"button\" class=\"close\" aria-label=\"alert close\" (click)=\"close()\">\n    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n  </button>\n</div>\n", styles: [""], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.ClrIconCustomTag, selector: "clr-icon" }, { type: i2.ClrAlertText, selector: ".alert-text" }, { type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.6", ngImport: i0, type: GlobalAlertComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ukis-global-alert', template: "<div *ngIf=\"alert\" class=\"alert alert-app-level\" [ngClass]=\"'alert-'+alert.type\" role=\"alert\">\n  <div class=\"alert-items\">\n    <div class=\"alert-item static\">\n      <div class=\"alert-icon-wrapper\">\n        <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n      </div>\n      <div class=\"alert-text\" [innerHTML]=alert.text></div>\n      <div *ngIf=\"alert.actions\" class=\"alert-actions\">\n        <button *ngFor=\"let action of alert.actions\" class=\"btn alert-action\" aria-label=\"alert action\"\n          (click)=\"action.callback && action.callback()\">{{action.title}}</button>\n      </div>\n    </div>\n  </div>\n  <button *ngIf=\"alert.closeable\" type=\"button\" class=\"close\" aria-label=\"alert close\" (click)=\"close()\">\n    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n  </button>\n</div>\n", styles: [""] }]
        }], ctorParameters: function () { return []; }, propDecorators: { alert: [{
                type: Input
            }], alertChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsLWFsZXJ0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUtdWkvc3JjL2xpYi9nbG9iYWwtYWxlcnQvZ2xvYmFsLWFsZXJ0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUtdWkvc3JjL2xpYi9nbG9iYWwtYWxlcnQvZ2xvYmFsLWFsZXJ0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFRdkUsTUFBTSxPQUFPLG9CQUFvQjtJQUcvQjtRQURVLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRWpCLEtBQUs7UUFDSCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7aUhBUlUsb0JBQW9CO3FHQUFwQixvQkFBb0IsOEhDUmpDLGkyQkFpQkE7MkZEVGEsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLG1CQUFtQjswRUFLcEIsS0FBSztzQkFBYixLQUFLO2dCQUNJLFdBQVc7c0JBQXBCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUFsZXJ0IH0gZnJvbSAnLi9hbGVydC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndWtpcy1nbG9iYWwtYWxlcnQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZ2xvYmFsLWFsZXJ0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZ2xvYmFsLWFsZXJ0LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgR2xvYmFsQWxlcnRDb21wb25lbnQge1xuICBASW5wdXQoKSBhbGVydCE6IG51bGwgfCBJQWxlcnQ7XG4gIEBPdXRwdXQoKSBhbGVydENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmFsZXJ0ID0gbnVsbDtcbiAgICB0aGlzLmFsZXJ0Q2hhbmdlLmVtaXQodGhpcy5hbGVydCk7XG4gIH1cblxufVxuIiwiPGRpdiAqbmdJZj1cImFsZXJ0XCIgY2xhc3M9XCJhbGVydCBhbGVydC1hcHAtbGV2ZWxcIiBbbmdDbGFzc109XCInYWxlcnQtJythbGVydC50eXBlXCIgcm9sZT1cImFsZXJ0XCI+XG4gIDxkaXYgY2xhc3M9XCJhbGVydC1pdGVtc1wiPlxuICAgIDxkaXYgY2xhc3M9XCJhbGVydC1pdGVtIHN0YXRpY1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImFsZXJ0LWljb24td3JhcHBlclwiPlxuICAgICAgICA8Y2xyLWljb24gY2xhc3M9XCJhbGVydC1pY29uXCIgc2hhcGU9XCJpbmZvLWNpcmNsZVwiPjwvY2xyLWljb24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJhbGVydC10ZXh0XCIgW2lubmVySFRNTF09YWxlcnQudGV4dD48L2Rpdj5cbiAgICAgIDxkaXYgKm5nSWY9XCJhbGVydC5hY3Rpb25zXCIgY2xhc3M9XCJhbGVydC1hY3Rpb25zXCI+XG4gICAgICAgIDxidXR0b24gKm5nRm9yPVwibGV0IGFjdGlvbiBvZiBhbGVydC5hY3Rpb25zXCIgY2xhc3M9XCJidG4gYWxlcnQtYWN0aW9uXCIgYXJpYS1sYWJlbD1cImFsZXJ0IGFjdGlvblwiXG4gICAgICAgICAgKGNsaWNrKT1cImFjdGlvbi5jYWxsYmFjayAmJiBhY3Rpb24uY2FsbGJhY2soKVwiPnt7YWN0aW9uLnRpdGxlfX08L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGJ1dHRvbiAqbmdJZj1cImFsZXJ0LmNsb3NlYWJsZVwiIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgYXJpYS1sYWJlbD1cImFsZXJ0IGNsb3NlXCIgKGNsaWNrKT1cImNsb3NlKClcIj5cbiAgICA8Y2xyLWljb24gYXJpYS1oaWRkZW49XCJ0cnVlXCIgc2hhcGU9XCJjbG9zZVwiPjwvY2xyLWljb24+XG4gIDwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=