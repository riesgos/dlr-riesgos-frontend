import { OnInit, OnDestroy } from '@angular/core';
import { LayersService } from '@dlr-eoc/services-layers';
import { MapStateService } from '@dlr-eoc/services-map-state';
import { LayerGroup, Layer } from '@dlr-eoc/services-layers';
import { Subscription } from 'rxjs';
import { CdkDragDrop } from '@angular/cdk/drag-drop';
import * as i0 from "@angular/core";
export declare class LayerControlComponent implements OnInit, OnDestroy {
    layersSvc: LayersService;
    mapStateSvc?: MapStateService;
    layerfilter: Layer['filtertype'];
    layerGroupsSubscription: Subscription;
    layersSubscription: Subscription;
    layergroups: Array<Layer | LayerGroup>;
    constructor();
    ngOnInit(): void;
    isLayerGroup(group: Layer | LayerGroup): boolean;
    ngOnDestroy(): void;
    drop(event: CdkDragDrop<(Layer | LayerGroup)[]>): void;
    checkBaselayer(layer: Layer, group?: LayerGroup): boolean;
    checkClassHide(layerOrGroup: Layer | LayerGroup): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<LayerControlComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LayerControlComponent, "ukis-layer-control", never, { "layersSvc": "layersSvc"; "mapStateSvc": "mapStateSvc"; "layerfilter": "layerfilter"; }, {}, never, never>;
}
